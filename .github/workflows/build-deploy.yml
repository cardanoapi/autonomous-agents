name: Docker Build and Deploy

on:
  push:
    branches:
      - master
      - dev

jobs:
  build_on_push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - agent-manager
          - api
          - agent-node
          - frontend
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.DOCKER_REGISTRY_HOST }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_SECRET }}

      - name: Build and push Docker image
        id: docker_build
        env:
          SERVICE_NAME: ${{ matrix.service }}
        run: |
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          COMMON_TAG="${{ vars.DEV_IMAGE_TAG }}"
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            COMMON_TAG="latest"
          fi

          # conditionally set the image name to repo name in case of agent.
          if [[ "${SERVICE_NAME}" == "agent-node" ]]; then
            IMAGE_NAME="${{ vars.DOCKER_REGISTRY_HOST }}/${{ vars.DOCKER_IMAGE_PREFIX }}/${REPO_NAME}"
          else
            IMAGE_NAME="${{ vars.DOCKER_REGISTRY_HOST }}/${{ vars.DOCKER_IMAGE_PREFIX }}/${REPO_NAME}-${SERVICE_NAME}"
          fi

          # frontend build fails with some network error when built with buidx in github runner.
          if [[ "${SERVICE_NAME}" == "frontend" ]]; then
            docker build  -t "$IMAGE_NAME:${{ github.sha }}" -t "$IMAGE_NAME:$COMMON_TAG" ${SERVICE_NAME}
            docker push "$IMAGE_NAME:${{ github.sha }}"
            docker push "$IMAGE_NAME:$COMMON_TAG"
          else
               # use buildx
              docker buildx build \
              --platform linux/amd64,linux/arm64 \
              -t "$IMAGE_NAME:${{ github.sha }}" \
              -t "$IMAGE_NAME:$COMMON_TAG" \
              ${SERVICE_NAME} \
              --push
          fi
        

  deploy_services:
    needs: build_on_push
    strategy:
      matrix:
        network:
          - preview
          - preprod
      max-parallel: 1
    runs-on: builder
    env:
      GITHUB_REPOSITORY: ${{ github.repository }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install docker-stack
      run: pip install --upgrade docker-stack
  
    - name: Log in to Docker Hub
      run: echo ${{ secrets.DOCKER_REGISTRY_SECRET }} | docker login -u ${{ secrets.DOCKER_REGISTRY_USERNAME }}  --password-stdin

    - name: Deploy stack
      run: > 
        docker-stack deploy --with-registry-auth drep_id_${{ matrix.network}} docker-compose-${{ matrix.network}}.yml
      working-directory: deploy
      env:
        NETWORK_NAME: ${{ matrix.network }}   
        IMAGE_TAG:  ${{ github.sha}}        about 7 months ago
        AGENT_MNEMONIC: ${{ secrets.AGENT_MNEMONIC}}
        BLOCKFROST_API_KEY: ${{ secrets.BLOCKFROST_API_KEY}}
        ELASTIC_APM_SERVER_URL: ${{vars.ELASTIC_APM_SERVER_URL}}
        ELASTIC_APM_API_KEY: ${{ secrets.ELASTIC_APM_API_KEY}}
        MANAGER_WALLET_ADDRESS: ${{vars.MANAGER_WALLET_ADDRESS}}
        POSTGRES_USER: ${{vars.POSTGRES_USER}}
        POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
        POSTGRES_HOST: ${{vars.POSTGRES_HOST}}  
        KUBER_API_KEY: ${{ secrets.KUBER_API_KEY}}
        MANAGER_WALLET_SIGNING_KEY: ${{ secrets.MANAGER_WALLET_SIGNING_KEY}}
