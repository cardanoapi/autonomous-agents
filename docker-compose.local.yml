version: '3.8'

services:

  #Database
  postgres:
    image: postgres:16.2
    container_name: postgres_container
    environment:
     POSTGRES_DB: cardano_autonomous_agent_testing_db
     POSTGRES_USER: root
     POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - cardano-autonomous-backend

#  #Pgadmin
  pgadmin:
    image: dpage/pgadmin4:8.2
    container_name: pg-admin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - "5050:80"
    networks:
      - cardano-autonomous-backend

#Zookeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper_agent_autonomous
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    networks:
      - cardano-autonomous-backend

 #Kafka
  kafka:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka
    container_name: kafka_agent_autonomous
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_NET:PLAINTEXT,HOST_NET:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS:  DOCKER_NET://kafka:9093,HOST_NET://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_NET
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9999
      KAFKA_CREATE_TOPICS: "trigger_config_updates:1:1"
    networks:
      - cardano-autonomous-backend

#Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui-agent-autonomous
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9093
    networks:
      - cardano-autonomous-backend

networks:
  cardano-autonomous-backend:
    name: backend
    driver: bridge

volumes:
  pg-data: