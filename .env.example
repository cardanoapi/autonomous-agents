# Frontend
NEXT_PUBLIC_API_URL=http://localhost:8000/api
NEXT_PUBLIC_NETWORK_NAME=sanchonet
NEXT_PUBLIC_MANAGER_BASE_DOMAIN=agent_manager:3001

# API and Manager Common
KAFKA_PREFIX=testing
DATABASE_URL=postgresql://root:root@postgres:5432/cardano_autonomous_agent_testing_db
KAFKA_BROKERS=kafka:9093
AGENT_MNEMONIC=

# API
DOCS_URL=/api/docs
KAFKA_ENABLED=true
METADATA_BASE_URL=https://metadata.drep.id/api
DB_SYNC_BASE_URL=http://dbsync:9000/api

# Agent Manager
CLIENT_ID=my-app
CARDANO_NODE_URL=172.31.0.4:3004
KUBER_BASE_URL=https://sanchonet.kuber.cardanoapi.io
KUBER_API_KEY=
MANAGER_WALLET_ADDRESS=
MANAGER_WALLET_SIGNING_KEY=
FAUCET_API_KEY=
CARDANO_NETWORK_MAGIC=4
BLOCKFROST_API_KEY=
ENABLE_BLOCKFROST_SUBMIT_API=True
NETWORK_NAME=sanchonet

# Postgres
POSTGRES_DB=cardano_autonomous_agent_testing_db
POSTGRES_USER=root
POSTGRES_PASSWORD=root

# DbSync
DBSYNC_PORT=9000
DBSYNC_CORS_ENABLE=true
DBSYNC_DATABASE_URL=

# KAFKA
KAFKA_BROKER_ID= 1
KAFKA_ZOOKEEPER_CONNECT= zookeeper:2181
KAFKA_LISTENER_SECURITY_PROTOCOL_MAP= DOCKER_NET:PLAINTEXT,HOST_NET:PLAINTEXT
KAFKA_ADVERTISED_LISTENERS=  DOCKER_NET://kafka:9093,HOST_NET://localhost:9092
KAFKA_INTER_BROKER_LISTENER_NAME= DOCKER_NET
KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR= 1
KAFKA_TRANSACTION_STATE_LOG_MIN_ISR= 1
KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR= 1
KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS= 0
KAFKA_JMX_PORT= 9999
KAFKA_CREATE_TOPICS= "trigger_config_updates:1:1"

#zookeeper
ZOOKEEPER_CLIENT_PORT = 2181
ZOOKEEPER_TICK_TIME = 2000
ZOOKEEPER_SYNC_LIMIT = 2

# Docker network name
DOCKER_NETWORK_NAME=cardano_autonomous_agent

# Docker network name
DOCKER_NETWORK_NAME=cardano_autonomous_agent

# Agent
AGENT_NODE_DOCKER_IMAGE_NAME=autonomous_agent




