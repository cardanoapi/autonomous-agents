generator client {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Agent table model
model Agent {
  id               String              @id // UUID
  name             String
  instance         BigInt
  template_id      String?
  index            BigInt              @default(autoincrement())
  last_active      DateTime?
  created_at       DateTime
  updated_at       DateTime
  deleted_at       DateTime?           // Soft deletion field
  owner            User?               @relation(fields: [userAddress], references: [address])
  userAddress      String?
  is_drep_registered Boolean           @default(false)
  wallet_details   AgentWalletDetails[]
  triggers         Trigger[]           // One-to-many relationship with Trigger
  template         Template?           @relation(fields: [template_id], references: [id], onDelete: SetNull,  onUpdate: Cascade)
  secret_key       Bytes               @db.ByteA
}

model Trigger {
  id               String              @id
  agent_id         String
  type             TriggerType
  action           Json
  data             Json
  created_at       DateTime
  updated_at       DateTime
  deleted_at       DateTime?

  agent            Agent               @relation(fields: [agent_id], references: [id], onDelete: Cascade, onUpdate:Cascade)
}


model Template_Trigger {
  id          String      @id
  template_id String
  type        TriggerType
  action      Json
  data        Json
  created_at  DateTime
  updated_at  DateTime
  deleted_at  DateTime?
}

model Template {
  id          String    @id
  name        String
  description String
  created_at  DateTime
  updated_at  DateTime
  deleted_at  DateTime?
  owner       User?     @relation(fields: [userAddress], references: [address])
  userAddress String?

  agents           Agent[]
}

// schema.prisma
model TriggerHistory {
  id            String      @id
  agentId       String
  functionName  String
  status        Boolean
  success       Boolean
  message       String
  timestamp     DateTime?
  txHash        String?
  triggerType   TriggerType
  instanceIndex BigInt      @default(0)
  parameters    Json?
  result        Json?
  internal      Json?
}

model FunctionDetail {
  id                String  @id
  name              String  @unique
  running           Boolean
  totalTransactions Int     @default(0)
}

enum TriggerType {
  CRON
  MANUAL
  EVENT
  INTERNAL
}

model User {
  address     String     @id
  created_at  DateTime
  updated_at  DateTime
  deleted_at  DateTime?
  Agent       Agent[]
  Template    Template[]
  isSuperUser Boolean    @default(false)
}

model AgentWalletDetails {
  address          String @id
  agent_id         String
  instance_index   Int
  payment_key_hash Bytes  @db.ByteA
  stake_key_hash   Bytes  @db.ByteA
  agent            Agent  @relation(fields: [agent_id], references: [id], onDelete:Cascade)
}
