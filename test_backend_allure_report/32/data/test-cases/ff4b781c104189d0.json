{"uid":"ff4b781c104189d0","name":"Get Template","fullName":"test_cases.test_template.TestTemplateManagement#test_get_template","historyId":"3e0654fc84f60fdcfbe40b395f79c630","time":{"start":1726738988181,"stop":1726738988181,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected POST /templates to succeed but got statusCode: 403 : body: \"Forbidden Request\"","statusTrace":"autonomous_agent_api = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f62863aa330>\nadmin_login_cookie = 'access_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2FkZHJlc3MiOiIxYjkxZjA4MDBjZTg2M2FiYzJiM2NjODUzMjFkMmM4ZDU...rYOu4; Domain=api.agents.cardanoapi.io; expires=Fri, 04 Oct 2024 09:43:07 GMT; HttpOnly; Path=/; SameSite=None; Secure'\n\n    @pytest.fixture(scope=\"session\")\n    def create_template_fixture(autonomous_agent_api, admin_login_cookie):\n        \"\"\"Fixture to create a new template.\"\"\"\n        template_name = str(uuid.uuid4())\n        template_description = \"Template Generated using Integration Test\"\n        template_triggers = []  # Define any necessary triggers here\n    \n        # Create template data\n        template_data = TemplateCreateDto(\n            name=template_name,\n            description=template_description,\n            template_triggers=template_triggers,\n        ).model_dump()\n    \n        # Create template via API\n>       response = autonomous_agent_api.create_template(\n            headers={\"Cookie\": admin_login_cookie}, body=template_data\n        )\n\ntest_cases/fixtures/template.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/autonomous_agent_api.py:128: in create_template\n    return self._post(\"/templates\", headers=headers, body=body)\nlib/autonomous_agent_api.py:80: in _post\n    return self._request(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f62863aa330>\nmethod = 'POST', endpoint = '/templates', param = None\nbody = {'description': 'Template Generated using Integration Test', 'name': '461fb679-2ae3-4faa-ad36-9e8cc014d00e', 'template_triggers': [], 'userAddress': None}\nheaders = {'Cookie': 'access_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2FkZHJlc3MiOiIxYjkxZjA4MDBjZTg2M2FiYzJiM2NjODUz...YOu4; Domain=api.agents.cardanoapi.io; expires=Fri, 04 Oct 2024 09:43:07 GMT; HttpOnly; Path=/; SameSite=None; Secure'}\n\n    def _request(\n        self,\n        method: str,\n        endpoint: str,\n        param: Any | None = None,\n        body: Any | None = None,\n        headers: dict | None = None,\n    ) -> Response:\n        endpoint = endpoint if endpoint.startswith(\"/\") else f\"/{endpoint}\"\n        full_url = self._base_url + endpoint\n        full_url_with_parms = full_url + param if param else full_url\n    \n        response = self._session.request(\n            method=method, url=full_url_with_parms, json=body, headers=headers\n        )\n    \n        try:\n            response_json = response.json()\n            response_json_str = json.dumps(response_json)[:200]\n        except:\n            response_json_str = \"Response not as Expected. Something is Wrong\"\n    \n        request_info = {\n            \"method\": method,\n            \"endpoint\": endpoint,\n            \"path_param\": param,\n            \"json\": json.dumps(body),\n            \"status_code\": response.status_code,\n            \"response_json\": response_json_str,\n        }\n    \n        self.requests_log.append(request_info)\n    \n>       assert (\n            200 <= response.status_code <= 299\n        ), f\"Expected {method} {endpoint} to succeed but got statusCode: {response.status_code} : body: {response.text}\"\nE       AssertionError: Expected POST /templates to succeed but got statusCode: 403 : body: \"Forbidden Request\"\n\nlib/autonomous_agent_api.py:49: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"autonomous_agent_api","time":{"start":1726738986838,"stop":1726738986838,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"admin_login_response","time":{"start":1726738987446,"stop":1726738987571,"duration":125},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_template_fixture","time":{"start":1726738987572,"stop":1726738987696,"duration":124},"status":"failed","statusMessage":"AssertionError: Expected POST /templates to succeed but got statusCode: 403 : body: \"Forbidden Request\"\n","statusTrace":"  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1139, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 897, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/test_cases/fixtures/template.py\", line 24, in create_template_fixture\n    response = autonomous_agent_api.create_template(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 128, in create_template\n    return self._post(\"/templates\", headers=headers, body=body)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 80, in _post\n    return self._request(\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 49, in _request\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"admin_login_cookie","time":{"start":1726738987572,"stop":1726738987572,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"autonomous_agent_api::0","time":{"start":1726738988362,"stop":1726738988362,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Get Template"},{"name":"parentSuite","value":"Template Management"},{"name":"suite","value":"test_template"},{"name":"subSuite","value":"TestTemplateManagement"},{"name":"host","value":"fv-az2036-179"},{"name":"thread","value":"1903-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_template"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":29,"unknown":0,"total":31},"items":[{"uid":"cfcc41d25c1ffc10","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/31//#testresult/cfcc41d25c1ffc10","status":"failed","statusDetails":"AssertionError: Expected POST /templates to succeed but got statusCode: 403 : body: \"Forbidden Request\"","time":{"start":1726730683222,"stop":1726730683222,"duration":0}},{"uid":"20048666921dab21","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/30//#testresult/20048666921dab21","status":"passed","time":{"start":1726730664542,"stop":1726730664669,"duration":127}},{"uid":"78640264fcc3f32","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/29//#testresult/78640264fcc3f32","status":"passed","time":{"start":1726655638929,"stop":1726655639067,"duration":138}},{"uid":"22b62fbdae3d2d17","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/28//#testresult/22b62fbdae3d2d17","status":"passed","time":{"start":1726572395170,"stop":1726572395354,"duration":184}},{"uid":"ff3a0cd228ce96b3","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/27//#testresult/ff3a0cd228ce96b3","status":"passed","time":{"start":1726571194394,"stop":1726571194534,"duration":140}},{"uid":"f3e7ae0f88d7fa36","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/26//#testresult/f3e7ae0f88d7fa36","status":"passed","time":{"start":1726555654130,"stop":1726555654272,"duration":142}},{"uid":"fdf2dfffb947e87f","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/25//#testresult/fdf2dfffb947e87f","status":"passed","time":{"start":1726554685014,"stop":1726554685198,"duration":184}},{"uid":"a2fbf8d68875d15c","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/24//#testresult/a2fbf8d68875d15c","status":"passed","time":{"start":1726552150862,"stop":1726552151045,"duration":183}},{"uid":"4f8b488d59be0f1","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/23//#testresult/4f8b488d59be0f1","status":"passed","time":{"start":1726475581091,"stop":1726475581276,"duration":185}},{"uid":"2d0e38f2d044df24","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/22//#testresult/2d0e38f2d044df24","status":"passed","time":{"start":1726461466744,"stop":1726461466865,"duration":121}},{"uid":"69d25d5ad4a79805","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/19//#testresult/69d25d5ad4a79805","status":"passed","time":{"start":1726056110798,"stop":1726056110932,"duration":134}},{"uid":"e2b34877c275dfed","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/18//#testresult/e2b34877c275dfed","status":"passed","time":{"start":1726051675040,"stop":1726051675174,"duration":134}},{"uid":"1967e002e1c3ab66","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/17//#testresult/1967e002e1c3ab66","status":"passed","time":{"start":1726047884848,"stop":1726047884985,"duration":137}},{"uid":"42675c011a65d4a4","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/16//#testresult/42675c011a65d4a4","status":"passed","time":{"start":1726037916090,"stop":1726037916226,"duration":136}},{"uid":"7303b6be6498c06f","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/15//#testresult/7303b6be6498c06f","status":"passed","time":{"start":1726031420365,"stop":1726031420488,"duration":123}},{"uid":"f5690ed7e44d62b4","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/14//#testresult/f5690ed7e44d62b4","status":"passed","time":{"start":1725963148177,"stop":1725963148362,"duration":185}},{"uid":"9199b5d8040dc002","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/13//#testresult/9199b5d8040dc002","status":"passed","time":{"start":1725950967447,"stop":1725950967573,"duration":126}},{"uid":"3f58d9dd11c6e9e0","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/12//#testresult/3f58d9dd11c6e9e0","status":"passed","time":{"start":1725869819224,"stop":1725869819349,"duration":125}},{"uid":"6f0648f3959b9882","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/11//#testresult/6f0648f3959b9882","status":"passed","time":{"start":1725616133548,"stop":1725616133685,"duration":137}},{"uid":"a4079912d9aca7dc","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/10//#testresult/a4079912d9aca7dc","status":"passed","time":{"start":1725615364640,"stop":1725615364818,"duration":178}}]},"tags":[]},"source":"ff4b781c104189d0.json","parameterValues":[]}