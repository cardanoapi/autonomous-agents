{"uid":"6bb54b91dd0da9c5","name":"Test User Login","fullName":"test_cases.test_auth.TestUserAuthentication#test_user_login","historyId":"c4f3bc323a890a8c1c21c8ac6cff8b21","time":{"start":1728022312828,"stop":1728022312828,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","statusTrace":"autonomous_agent_api = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f619c66ca10>\n\n    @pytest.fixture(scope=\"session\")\n    def user_login_response(autonomous_agent_api):\n>       return autonomous_agent_api.login_user(body=user_signed_data.model_dump())\n\ntest_cases/fixtures/auth.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/autonomous_agent_api.py:148: in login_user\n    return self._post(\"/auth/login\", body=body)\nlib/autonomous_agent_api.py:80: in _post\n    return self._request(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f619c66ca10>\nmethod = 'POST', endpoint = '/auth/login', param = None\nbody = {'key': 'a5010102581de06d31162c8b37ec443bd42c4707a8fc3f0a1d2fa9aeee54bdff7341ba03272006215820bce6019d4f121b928a4ebb5c1...b60a02987a919cf972e669cbfa1d7a08059e56d4c159f786bd798807dff4af23db6f4e2107dbb8f88365b5eee676bcefdfcf4db63a2f904471403'}\nheaders = None\n\n    def _request(\n        self,\n        method: str,\n        endpoint: str,\n        param: Any | None = None,\n        body: Any | None = None,\n        headers: dict | None = None,\n    ) -> Response:\n        endpoint = endpoint if endpoint.startswith(\"/\") else f\"/{endpoint}\"\n        full_url = self._base_url + endpoint\n        full_url_with_parms = full_url + param if param else full_url\n    \n        response = self._session.request(\n            method=method, url=full_url_with_parms, json=body, headers=headers\n        )\n    \n        try:\n            response_json = response.json()\n            response_json_str = json.dumps(response_json)[:200]\n        except:\n            response_json_str = \"Response not as Expected. Something is Wrong\"\n    \n        request_info = {\n            \"method\": method,\n            \"endpoint\": endpoint,\n            \"path_param\": param,\n            \"json\": json.dumps(body),\n            \"status_code\": response.status_code,\n            \"response_json\": response_json_str,\n        }\n    \n        self.requests_log.append(request_info)\n    \n>       assert (\n            200 <= response.status_code <= 299\n        ), f\"Expected {method} {endpoint} to succeed but got statusCode: {response.status_code} : body: {response.text}\"\nE       AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\nE       <head><title>503 Service Temporarily Unavailable</title></head>\r\nE       <body>\r\nE       <center><h1>503 Service Temporarily Unavailable</h1></center>\r\nE       <hr><center>nginx/1.23.2</center>\r\nE       </body>\r\nE       </html>\n\nlib/autonomous_agent_api.py:49: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"autonomous_agent_api","time":{"start":1728022312017,"stop":1728022312017,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"user_login_response","time":{"start":1728022312828,"stop":1728022312958,"duration":130},"status":"failed","statusMessage":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>\r\n\n","statusTrace":"  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1139, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 897, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/test_cases/fixtures/auth.py\", line 8, in user_login_response\n    return autonomous_agent_api.login_user(body=user_signed_data.model_dump())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 148, in login_user\n    return self._post(\"/auth/login\", body=body)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 80, in _post\n    return self._request(\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 49, in _request\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"autonomous_agent_api::0","time":{"start":1728022313199,"stop":1728022313199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"User Authentication"},{"name":"feature","value":"User Login"},{"name":"suite","value":"test_auth"},{"name":"subSuite","value":"TestUserAuthentication"},{"name":"host","value":"fv-az1532-781"},{"name":"thread","value":"2018-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_auth"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":53,"unknown":0,"total":55},"items":[{"uid":"c2a5da1bd4970cbc","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/53//#testresult/c2a5da1bd4970cbc","status":"passed","time":{"start":1728020023645,"stop":1728020023645,"duration":0}},{"uid":"5385355a5efabc3f","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/52//#testresult/5385355a5efabc3f","status":"passed","time":{"start":1728019911974,"stop":1728019911975,"duration":1}},{"uid":"bcd5f837e20556f4","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/51//#testresult/bcd5f837e20556f4","status":"passed","time":{"start":1728015619064,"stop":1728015619064,"duration":0}},{"uid":"69b531da02d8fe8a","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/50//#testresult/69b531da02d8fe8a","status":"passed","time":{"start":1727944579577,"stop":1727944579577,"duration":0}},{"uid":"7eded47e5520c9fb","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/49//#testresult/7eded47e5520c9fb","status":"passed","time":{"start":1727942897169,"stop":1727942897170,"duration":1}},{"uid":"1d97b69ac13c4551","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/48//#testresult/1d97b69ac13c4551","status":"passed","time":{"start":1727841528028,"stop":1727841528029,"duration":1}},{"uid":"9511029a3bca0f19","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/47//#testresult/9511029a3bca0f19","status":"passed","time":{"start":1727432538456,"stop":1727432538456,"duration":0}},{"uid":"cad62e4a7e7cf5ec","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/46//#testresult/cad62e4a7e7cf5ec","status":"passed","time":{"start":1727269158506,"stop":1727269158506,"duration":0}},{"uid":"cc5ea8ecfb45e4e4","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/45//#testresult/cc5ea8ecfb45e4e4","status":"passed","time":{"start":1727260703233,"stop":1727260703233,"duration":0}},{"uid":"fe3b0ff93eb2e5d8","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/44//#testresult/fe3b0ff93eb2e5d8","status":"passed","time":{"start":1727257912554,"stop":1727257912554,"duration":0}},{"uid":"e8d4b0c878a65f80","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/43//#testresult/e8d4b0c878a65f80","status":"passed","time":{"start":1727257608662,"stop":1727257608662,"duration":0}},{"uid":"6f9bcabacfbbffc2","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/42//#testresult/6f9bcabacfbbffc2","status":"passed","time":{"start":1727255162912,"stop":1727255162912,"duration":0}},{"uid":"ac5fb6161baa92f8","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/41//#testresult/ac5fb6161baa92f8","status":"passed","time":{"start":1727252534674,"stop":1727252534674,"duration":0}},{"uid":"90ceb0595a057975","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/40//#testresult/90ceb0595a057975","status":"passed","time":{"start":1727252438564,"stop":1727252438564,"duration":0}},{"uid":"7754c3e751cb8ca7","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/39//#testresult/7754c3e751cb8ca7","status":"passed","time":{"start":1727248098466,"stop":1727248098466,"duration":0}},{"uid":"40e5266ff04f02b6","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/38//#testresult/40e5266ff04f02b6","status":"passed","time":{"start":1727240094256,"stop":1727240094256,"duration":0}},{"uid":"7c5158c4793e4ef2","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/37//#testresult/7c5158c4793e4ef2","status":"passed","time":{"start":1727185311453,"stop":1727185311453,"duration":0}},{"uid":"c3138a6491efa2d","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/36//#testresult/c3138a6491efa2d","status":"passed","time":{"start":1727177831345,"stop":1727177831346,"duration":1}},{"uid":"c9648278ab03228c","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/35//#testresult/c9648278ab03228c","status":"passed","time":{"start":1727169154035,"stop":1727169154035,"duration":0}},{"uid":"8785b7ffbfea2422","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/34//#testresult/8785b7ffbfea2422","status":"passed","time":{"start":1727152502654,"stop":1727152502655,"duration":1}}]},"tags":[]},"source":"6bb54b91dd0da9c5.json","parameterValues":[]}