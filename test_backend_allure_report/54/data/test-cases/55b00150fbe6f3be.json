{"uid":"55b00150fbe6f3be","name":"Test Delete Admin Agent","fullName":"test_cases.test_agent.TestAgentManagement#test_delete_admin_agent","historyId":"bf5102b0fa26be747eb8ee000c1d24e7","time":{"start":1728022312778,"stop":1728022312778,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","statusTrace":"autonomous_agent_api = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f619c66ca10>\n\n    @pytest.fixture(scope=\"session\")\n    def admin_login_response(autonomous_agent_api):\n>       return autonomous_agent_api.login_user(body=admin_signed_data.model_dump())\n\ntest_cases/fixtures/auth.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/autonomous_agent_api.py:148: in login_user\n    return self._post(\"/auth/login\", body=body)\nlib/autonomous_agent_api.py:80: in _post\n    return self._request(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f619c66ca10>\nmethod = 'POST', endpoint = '/auth/login', param = None\nbody = {'key': 'a5010102581de01b91f0800ce863abc2b3cc85321d2c8d554ca491767fc68ad5bcf4f3032720062158209e97c896a81a3bc9ec5701ebc...475fbd669075949ff40d134d13e3626655d64fb64b2740875e084104ebe8e70c03ef20639d2fe449a57f63c78d9b03543addf0131a57a643e130b'}\nheaders = None\n\n    def _request(\n        self,\n        method: str,\n        endpoint: str,\n        param: Any | None = None,\n        body: Any | None = None,\n        headers: dict | None = None,\n    ) -> Response:\n        endpoint = endpoint if endpoint.startswith(\"/\") else f\"/{endpoint}\"\n        full_url = self._base_url + endpoint\n        full_url_with_parms = full_url + param if param else full_url\n    \n        response = self._session.request(\n            method=method, url=full_url_with_parms, json=body, headers=headers\n        )\n    \n        try:\n            response_json = response.json()\n            response_json_str = json.dumps(response_json)[:200]\n        except:\n            response_json_str = \"Response not as Expected. Something is Wrong\"\n    \n        request_info = {\n            \"method\": method,\n            \"endpoint\": endpoint,\n            \"path_param\": param,\n            \"json\": json.dumps(body),\n            \"status_code\": response.status_code,\n            \"response_json\": response_json_str,\n        }\n    \n        self.requests_log.append(request_info)\n    \n>       assert (\n            200 <= response.status_code <= 299\n        ), f\"Expected {method} {endpoint} to succeed but got statusCode: {response.status_code} : body: {response.text}\"\nE       AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\nE       <head><title>503 Service Temporarily Unavailable</title></head>\r\nE       <body>\r\nE       <center><h1>503 Service Temporarily Unavailable</h1></center>\r\nE       <hr><center>nginx/1.23.2</center>\r\nE       </body>\r\nE       </html>\n\nlib/autonomous_agent_api.py:49: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"autonomous_agent_api","time":{"start":1728022312017,"stop":1728022312017,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"admin_login_response","time":{"start":1728022312624,"stop":1728022312753,"duration":129},"status":"failed","statusMessage":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>\r\n\n","statusTrace":"  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1139, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 897, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/test_cases/fixtures/auth.py\", line 24, in admin_login_response\n    return autonomous_agent_api.login_user(body=admin_signed_data.model_dump())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 148, in login_user\n    return self._post(\"/auth/login\", body=body)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 80, in _post\n    return self._request(\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 49, in _request\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"autonomous_agent_api::0","time":{"start":1728022313199,"stop":1728022313199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"Agent Management"},{"name":"feature","value":"Delete Admin Agent"},{"name":"suite","value":"test_agent"},{"name":"subSuite","value":"TestAgentManagement"},{"name":"host","value":"fv-az1532-781"},{"name":"thread","value":"2018-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_agent"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":2,"skipped":0,"passed":42,"unknown":0,"total":55},"items":[{"uid":"c11587892a0c8e4c","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/53//#testresult/c11587892a0c8e4c","status":"broken","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))","time":{"start":1728020022693,"stop":1728020022693,"duration":0}},{"uid":"4e0d57835c738ccb","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/52//#testresult/4e0d57835c738ccb","status":"broken","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))","time":{"start":1728019910791,"stop":1728019910791,"duration":0}},{"uid":"6b191c7efc198ead","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/51//#testresult/6b191c7efc198ead","status":"passed","time":{"start":1728015618141,"stop":1728015618141,"duration":0}},{"uid":"4e04e0d6dfa0027c","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/50//#testresult/4e04e0d6dfa0027c","status":"passed","time":{"start":1727944578754,"stop":1727944578754,"duration":0}},{"uid":"626f74d965204f3f","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/49//#testresult/626f74d965204f3f","status":"passed","time":{"start":1727942896038,"stop":1727942896038,"duration":0}},{"uid":"be15909dd14f5bb5","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/48//#testresult/be15909dd14f5bb5","status":"passed","time":{"start":1727841527156,"stop":1727841527156,"duration":0}},{"uid":"b151aaddbd4586c0","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/47//#testresult/b151aaddbd4586c0","status":"passed","time":{"start":1727432537728,"stop":1727432537729,"duration":1}},{"uid":"e7ef227b37b39795","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/46//#testresult/e7ef227b37b39795","status":"passed","time":{"start":1727269157440,"stop":1727269157440,"duration":0}},{"uid":"77c0ee4f25e0534d","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/45//#testresult/77c0ee4f25e0534d","status":"passed","time":{"start":1727260702191,"stop":1727260702191,"duration":0}},{"uid":"94e35aebc72868d3","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/44//#testresult/94e35aebc72868d3","status":"passed","time":{"start":1727257911776,"stop":1727257911776,"duration":0}},{"uid":"38be38c1b040efc2","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/43//#testresult/38be38c1b040efc2","status":"passed","time":{"start":1727257607780,"stop":1727257607780,"duration":0}},{"uid":"62f70d67e2980e98","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/42//#testresult/62f70d67e2980e98","status":"passed","time":{"start":1727255162071,"stop":1727255162072,"duration":1}},{"uid":"4ce66fae704ac104","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/41//#testresult/4ce66fae704ac104","status":"passed","time":{"start":1727252533346,"stop":1727252533346,"duration":0}},{"uid":"bde3a3529df3a35a","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/40//#testresult/bde3a3529df3a35a","status":"passed","time":{"start":1727252437546,"stop":1727252437546,"duration":0}},{"uid":"4ad20962a6ef8d50","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/39//#testresult/4ad20962a6ef8d50","status":"passed","time":{"start":1727248097349,"stop":1727248097349,"duration":0}},{"uid":"69370a00119d058d","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/38//#testresult/69370a00119d058d","status":"passed","time":{"start":1727240093255,"stop":1727240093256,"duration":1}},{"uid":"7b24b477cff1337c","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/37//#testresult/7b24b477cff1337c","status":"passed","time":{"start":1727185310562,"stop":1727185310562,"duration":0}},{"uid":"7afe8713555f9bb3","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/36//#testresult/7afe8713555f9bb3","status":"passed","time":{"start":1727177830474,"stop":1727177830474,"duration":0}},{"uid":"21377587135cbd38","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/35//#testresult/21377587135cbd38","status":"passed","time":{"start":1727169153190,"stop":1727169153190,"duration":0}},{"uid":"67318868f08274d8","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/34//#testresult/67318868f08274d8","status":"passed","time":{"start":1727152501864,"stop":1727152501864,"duration":0}}]},"tags":[]},"source":"55b00150fbe6f3be.json","parameterValues":[]}