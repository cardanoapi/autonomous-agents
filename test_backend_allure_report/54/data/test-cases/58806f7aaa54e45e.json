{"uid":"58806f7aaa54e45e","name":"Test Template Edit","fullName":"test_cases.test_template.TestTemplateManagement#test_template_edit","historyId":"d79a2535db45bda6b7c50f297d55cad0","time":{"start":1728022313177,"stop":1728022313177,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","statusTrace":"autonomous_agent_api = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f619c66ca10>\n\n    @pytest.fixture(scope=\"session\")\n    def admin_login_response(autonomous_agent_api):\n>       return autonomous_agent_api.login_user(body=admin_signed_data.model_dump())\n\ntest_cases/fixtures/auth.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/autonomous_agent_api.py:148: in login_user\n    return self._post(\"/auth/login\", body=body)\nlib/autonomous_agent_api.py:80: in _post\n    return self._request(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f619c66ca10>\nmethod = 'POST', endpoint = '/auth/login', param = None\nbody = {'key': 'a5010102581de01b91f0800ce863abc2b3cc85321d2c8d554ca491767fc68ad5bcf4f3032720062158209e97c896a81a3bc9ec5701ebc...475fbd669075949ff40d134d13e3626655d64fb64b2740875e084104ebe8e70c03ef20639d2fe449a57f63c78d9b03543addf0131a57a643e130b'}\nheaders = None\n\n    def _request(\n        self,\n        method: str,\n        endpoint: str,\n        param: Any | None = None,\n        body: Any | None = None,\n        headers: dict | None = None,\n    ) -> Response:\n        endpoint = endpoint if endpoint.startswith(\"/\") else f\"/{endpoint}\"\n        full_url = self._base_url + endpoint\n        full_url_with_parms = full_url + param if param else full_url\n    \n        response = self._session.request(\n            method=method, url=full_url_with_parms, json=body, headers=headers\n        )\n    \n        try:\n            response_json = response.json()\n            response_json_str = json.dumps(response_json)[:200]\n        except:\n            response_json_str = \"Response not as Expected. Something is Wrong\"\n    \n        request_info = {\n            \"method\": method,\n            \"endpoint\": endpoint,\n            \"path_param\": param,\n            \"json\": json.dumps(body),\n            \"status_code\": response.status_code,\n            \"response_json\": response_json_str,\n        }\n    \n        self.requests_log.append(request_info)\n    \n>       assert (\n            200 <= response.status_code <= 299\n        ), f\"Expected {method} {endpoint} to succeed but got statusCode: {response.status_code} : body: {response.text}\"\nE       AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\nE       <head><title>503 Service Temporarily Unavailable</title></head>\r\nE       <body>\r\nE       <center><h1>503 Service Temporarily Unavailable</h1></center>\r\nE       <hr><center>nginx/1.23.2</center>\r\nE       </body>\r\nE       </html>\n\nlib/autonomous_agent_api.py:49: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"autonomous_agent_api","time":{"start":1728022312017,"stop":1728022312017,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"admin_login_response","time":{"start":1728022312624,"stop":1728022312753,"duration":129},"status":"failed","statusMessage":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>\r\n\n","statusTrace":"  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1139, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 897, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/test_cases/fixtures/auth.py\", line 24, in admin_login_response\n    return autonomous_agent_api.login_user(body=admin_signed_data.model_dump())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 148, in login_user\n    return self._post(\"/auth/login\", body=body)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 80, in _post\n    return self._request(\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 49, in _request\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"autonomous_agent_api::0","time":{"start":1728022313199,"stop":1728022313199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"Template Management"},{"name":"feature","value":"Template Edit"},{"name":"suite","value":"test_template"},{"name":"subSuite","value":"TestTemplateManagement"},{"name":"host","value":"fv-az1532-781"},{"name":"thread","value":"2018-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_template"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":2,"skipped":0,"passed":49,"unknown":0,"total":55},"items":[{"uid":"733f5eac673149f4","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/53//#testresult/733f5eac673149f4","status":"broken","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))","time":{"start":1728020024580,"stop":1728020024580,"duration":0}},{"uid":"e82ecd2fbba14d2c","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/52//#testresult/e82ecd2fbba14d2c","status":"broken","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))","time":{"start":1728019912846,"stop":1728019912846,"duration":0}},{"uid":"8fc4d53b701fed29","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/51//#testresult/8fc4d53b701fed29","status":"passed","time":{"start":1728015619585,"stop":1728015619585,"duration":0}},{"uid":"5396b3bb8bd2a5f7","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/50//#testresult/5396b3bb8bd2a5f7","status":"passed","time":{"start":1727944580091,"stop":1727944580091,"duration":0}},{"uid":"49ae49b4f1090101","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/49//#testresult/49ae49b4f1090101","status":"passed","time":{"start":1727942897941,"stop":1727942897941,"duration":0}},{"uid":"96039a6417fc5845","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/48//#testresult/96039a6417fc5845","status":"passed","time":{"start":1727841528563,"stop":1727841528563,"duration":0}},{"uid":"fe11f9a0327796fc","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/47//#testresult/fe11f9a0327796fc","status":"passed","time":{"start":1727432538945,"stop":1727432538945,"duration":0}},{"uid":"7c3d9924beb5f593","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/46//#testresult/7c3d9924beb5f593","status":"passed","time":{"start":1727269159257,"stop":1727269159257,"duration":0}},{"uid":"3df2f901467ea551","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/45//#testresult/3df2f901467ea551","status":"passed","time":{"start":1727260703753,"stop":1727260703753,"duration":0}},{"uid":"a93e74c167c6e446","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/44//#testresult/a93e74c167c6e446","status":"passed","time":{"start":1727257913050,"stop":1727257913050,"duration":0}},{"uid":"30949167aea2934b","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/43//#testresult/30949167aea2934b","status":"passed","time":{"start":1727257609164,"stop":1727257609164,"duration":0}},{"uid":"1337c2a03c52f500","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/42//#testresult/1337c2a03c52f500","status":"passed","time":{"start":1727255163419,"stop":1727255163419,"duration":0}},{"uid":"b3c38941b1202430","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/41//#testresult/b3c38941b1202430","status":"passed","time":{"start":1727252535157,"stop":1727252535158,"duration":1}},{"uid":"17a62152b73a5041","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/40//#testresult/17a62152b73a5041","status":"passed","time":{"start":1727252439313,"stop":1727252439313,"duration":0}},{"uid":"5a6292b0b78c07ef","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/39//#testresult/5a6292b0b78c07ef","status":"passed","time":{"start":1727248099219,"stop":1727248099219,"duration":0}},{"uid":"cb2621625b74dd1","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/38//#testresult/cb2621625b74dd1","status":"passed","time":{"start":1727240094968,"stop":1727240094968,"duration":0}},{"uid":"db349bc79aea24a7","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/37//#testresult/db349bc79aea24a7","status":"passed","time":{"start":1727185312000,"stop":1727185312000,"duration":0}},{"uid":"d02a9e4aa5db554e","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/36//#testresult/d02a9e4aa5db554e","status":"passed","time":{"start":1727177831854,"stop":1727177831854,"duration":0}},{"uid":"aac57750900fd4ec","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/35//#testresult/aac57750900fd4ec","status":"passed","time":{"start":1727169154540,"stop":1727169154540,"duration":0}},{"uid":"772a0c88a4cd5209","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/34//#testresult/772a0c88a4cd5209","status":"passed","time":{"start":1727152503155,"stop":1727152503155,"duration":0}}]},"tags":[]},"source":"58806f7aaa54e45e.json","parameterValues":[]}