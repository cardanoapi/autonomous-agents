{"uid":"e21b0b7c6ae35175","name":"Test Cron Transfer ADA Logs","fullName":"test_cases.test_agent_functions.TestAgentFunctionExecution#test_cron_transfer_ada_logs","historyId":"8f129459ef0776a0fa46da5fc475ea3a","time":{"start":1728055093154,"stop":1728055093154,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","statusTrace":"autonomous_agent_api = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f420c14b830>\n\n    @pytest.fixture(scope=\"session\")\n    def admin_login_response(autonomous_agent_api):\n>       return autonomous_agent_api.login_user(body=admin_signed_data.model_dump())\n\ntest_cases/fixtures/auth.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/autonomous_agent_api.py:148: in login_user\n    return self._post(\"/auth/login\", body=body)\nlib/autonomous_agent_api.py:80: in _post\n    return self._request(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f420c14b830>\nmethod = 'POST', endpoint = '/auth/login', param = None\nbody = {'key': 'a5010102581de01b91f0800ce863abc2b3cc85321d2c8d554ca491767fc68ad5bcf4f3032720062158209e97c896a81a3bc9ec5701ebc...475fbd669075949ff40d134d13e3626655d64fb64b2740875e084104ebe8e70c03ef20639d2fe449a57f63c78d9b03543addf0131a57a643e130b'}\nheaders = None\n\n    def _request(\n        self,\n        method: str,\n        endpoint: str,\n        param: Any | None = None,\n        body: Any | None = None,\n        headers: dict | None = None,\n    ) -> Response:\n        endpoint = endpoint if endpoint.startswith(\"/\") else f\"/{endpoint}\"\n        full_url = self._base_url + endpoint\n        full_url_with_parms = full_url + param if param else full_url\n    \n        response = self._session.request(\n            method=method, url=full_url_with_parms, json=body, headers=headers\n        )\n    \n        try:\n            response_json = response.json()\n            response_json_str = json.dumps(response_json)[:200]\n        except:\n            response_json_str = \"Response not as Expected. Something is Wrong\"\n    \n        request_info = {\n            \"method\": method,\n            \"endpoint\": endpoint,\n            \"path_param\": param,\n            \"json\": json.dumps(body),\n            \"status_code\": response.status_code,\n            \"response_json\": response_json_str,\n        }\n    \n        self.requests_log.append(request_info)\n    \n>       assert (\n            200 <= response.status_code <= 299\n        ), f\"Expected {method} {endpoint} to succeed but got statusCode: {response.status_code} : body: {response.text}\"\nE       AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\nE       <head><title>503 Service Temporarily Unavailable</title></head>\r\nE       <body>\r\nE       <center><h1>503 Service Temporarily Unavailable</h1></center>\r\nE       <hr><center>nginx/1.23.2</center>\r\nE       </body>\r\nE       </html>\n\nlib/autonomous_agent_api.py:49: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"autonomous_agent_api","time":{"start":1728055092432,"stop":1728055092432,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"admin_login_response","time":{"start":1728055093004,"stop":1728055093121,"duration":117},"status":"failed","statusMessage":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>\r\n\n","statusTrace":"  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1139, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 897, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/test_cases/fixtures/auth.py\", line 24, in admin_login_response\n    return autonomous_agent_api.login_user(body=admin_signed_data.model_dump())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 148, in login_user\n    return self._post(\"/auth/login\", body=body)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 80, in _post\n    return self._request(\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 49, in _request\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"autonomous_agent_api::0","time":{"start":1728055093525,"stop":1728055093525,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"Agent Function Execution"},{"name":"feature","value":"Transfer Ada Cron Function"},{"name":"subSuite","value":"CRON"},{"name":"suite","value":"test_agent_functions"},{"name":"host","value":"fv-az1391-951"},{"name":"thread","value":"1986-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_agent_functions"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":24,"broken":3,"skipped":0,"passed":31,"unknown":0,"total":58},"items":[{"uid":"e145050926473e3e","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/56//#testresult/e145050926473e3e","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728054163835,"stop":1728054163835,"duration":0}},{"uid":"78f6c1d418742459","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/55//#testresult/78f6c1d418742459","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728031538220,"stop":1728031538220,"duration":0}},{"uid":"87fd43f2a7021a64","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/54//#testresult/87fd43f2a7021a64","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728022312789,"stop":1728022312789,"duration":0}},{"uid":"2b2a2ef72ef4a126","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/53//#testresult/2b2a2ef72ef4a126","status":"broken","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))","time":{"start":1728020022811,"stop":1728020022811,"duration":0}},{"uid":"334ba61755da1d8a","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/52//#testresult/334ba61755da1d8a","status":"broken","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))","time":{"start":1728019910912,"stop":1728019910912,"duration":0}},{"uid":"99d1b2c1b19e5295","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/51//#testresult/99d1b2c1b19e5295","status":"passed","time":{"start":1728015618143,"stop":1728015618410,"duration":267}},{"uid":"82c67620a470e4b2","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/50//#testresult/82c67620a470e4b2","status":"passed","time":{"start":1727944578756,"stop":1727944578968,"duration":212}},{"uid":"c3b5b38a9d9aa8fc","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/49//#testresult/c3b5b38a9d9aa8fc","status":"passed","time":{"start":1727942896040,"stop":1727942896329,"duration":289}},{"uid":"bcc06d4aac71b9ef","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/48//#testresult/bcc06d4aac71b9ef","status":"passed","time":{"start":1727841527158,"stop":1727841527415,"duration":257}},{"uid":"c727bbe3724556f0","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/47//#testresult/c727bbe3724556f0","status":"passed","time":{"start":1727432537731,"stop":1727432537938,"duration":207}},{"uid":"d3ed86b8f4756a76","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/46//#testresult/d3ed86b8f4756a76","status":"passed","time":{"start":1727269157442,"stop":1727269157754,"duration":312}},{"uid":"cb66a76d7c7890f","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/45//#testresult/cb66a76d7c7890f","status":"passed","time":{"start":1727260702193,"stop":1727260702561,"duration":368}},{"uid":"99541769d0b9ed1c","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/44//#testresult/99541769d0b9ed1c","status":"passed","time":{"start":1727257911778,"stop":1727257911984,"duration":206}},{"uid":"b6fe5479f47ec7f7","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/43//#testresult/b6fe5479f47ec7f7","status":"passed","time":{"start":1727257607783,"stop":1727257608052,"duration":269}},{"uid":"f77348e546ecec13","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/42//#testresult/f77348e546ecec13","status":"passed","time":{"start":1727255162074,"stop":1727255162317,"duration":243}},{"uid":"1b32b9a29c44a828","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/41//#testresult/1b32b9a29c44a828","status":"passed","time":{"start":1727252533348,"stop":1727252533628,"duration":280}},{"uid":"b2a48e3a1840c923","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/40//#testresult/b2a48e3a1840c923","status":"passed","time":{"start":1727252437548,"stop":1727252437813,"duration":265}},{"uid":"8601180d04e2192a","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/39//#testresult/8601180d04e2192a","status":"passed","time":{"start":1727248097351,"stop":1727248097653,"duration":302}},{"uid":"b2386c79227767ed","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/38//#testresult/b2386c79227767ed","status":"failed","statusDetails":"AssertionError: No successful 'transferADA' log found | Failed Logs: None","time":{"start":1727240093258,"stop":1727240093519,"duration":261}},{"uid":"86201c6f60bf28d4","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/37//#testresult/86201c6f60bf28d4","status":"failed","statusDetails":"AssertionError: No successful 'transferADA' log found | Failed Logs: None","time":{"start":1727185310564,"stop":1727185310806,"duration":242}}]},"tags":[]},"source":"e21b0b7c6ae35175.json","parameterValues":[]}