{"uid":"6c004426b0d4adb5","name":"Test Event Vote Logs","fullName":"test_cases.test_agent_functions.TestAgentFunctionExecution#test_event_vote_logs","historyId":"b479afaeccaeb0b2b306544ea95f6f33","time":{"start":1731823926944,"stop":1731823927245,"duration":301},"status":"failed","statusMessage":"AssertionError: No successful 'voteEvent' log found | Failed Logs: None","statusTrace":"logs = [], function_name = 'voteOnProposal', trigger_type = 'EVENT'\nmessage = \"No successful 'voteEvent' log found\"\n\n    def assert_successful_log(logs, function_name, trigger_type, message):\n        try:\n>           assert any(\n                log[\"functionName\"] == function_name\n                and log[\"triggerType\"] == trigger_type\n                and log[\"status\"] is True\n                and log[\"success\"] is True\n                for log in logs\n            ), message\nE           AssertionError: No successful 'voteEvent' log found\nE           assert False\nE            +  where False = any(<generator object assert_successful_log.<locals>.<genexpr> at 0x7efd88761d20>)\n\ntest_cases/test_agent_functions.py:6: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_cases.test_agent_functions.TestAgentFunctionExecution object at 0x7efd891d9880>\nrun_admin_agent_fixture = <Response [200]>\nautonomous_agent_api = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7efd8893e5d0>\n\n    @allure.sub_suite(\"EVENT\")\n    @allure.title(\"Test Event Vote Logs\")\n    @allure.feature(\"Vote Event Function\")\n    def test_event_vote_logs(self, run_admin_agent_fixture, autonomous_agent_api):\n        agent_id = run_admin_agent_fixture.json().get(\"id\")\n        logs = (\n            autonomous_agent_api.get_trigger_history(\n                param=\"?agent_id=\" + str(agent_id) + \"&functionName=voteOnProposal\"\n            )\n            .json()\n            .get(\"items\")\n        )\n>       assert_successful_log(\n            logs,\n            function_name=\"voteOnProposal\",\n            trigger_type=\"EVENT\",\n            message=\"No successful 'voteEvent' log found\",\n        )\n\ntest_cases/test_agent_functions.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nlogs = [], function_name = 'voteOnProposal', trigger_type = 'EVENT'\nmessage = \"No successful 'voteEvent' log found\"\n\n    def assert_successful_log(logs, function_name, trigger_type, message):\n        try:\n            assert any(\n                log[\"functionName\"] == function_name\n                and log[\"triggerType\"] == trigger_type\n                and log[\"status\"] is True\n                and log[\"success\"] is True\n                for log in logs\n            ), message\n        except AssertionError:\n            failed_logs = [log for log in logs if log[\"functionName\"] == function_name]\n    \n            if failed_logs:\n                allure.attach(\n                    str(failed_logs),\n                    name=\"Filtered Logs with Matching Function Name\",\n                    attachment_type=allure.attachment_type.JSON,\n                )\n            else:\n                allure.attach(\n                    \"No log found with the given parameters.\",\n                    name=\"No Matching Logs\",\n                    attachment_type=allure.attachment_type.TEXT,\n                )\n>           raise AssertionError(\n                f\"{message} | Failed Logs: {failed_logs if failed_logs else 'None'}\"\n            )\nE           AssertionError: No successful 'voteEvent' log found | Failed Logs: None\n\ntest_cases/test_agent_functions.py:28: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"autonomous_agent_api","time":{"start":1731823436353,"stop":1731823436354,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"admin_login_response","time":{"start":1731823439083,"stop":1731823439266,"duration":183},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"admin_login_cookie","time":{"start":1731823439266,"stop":1731823439266,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_template_fixture","time":{"start":1731823439266,"stop":1731823439453,"duration":187},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"edit_template_fixture","time":{"start":1731823439453,"stop":1731823439637,"duration":184},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_admin_agent_fixture","time":{"start":1731823439637,"stop":1731823439838,"duration":201},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"edit_admin_agent_fixture","time":{"start":1731823440483,"stop":1731823440784,"duration":301},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"load_funds_to_agent_address","time":{"start":1731823440795,"stop":1731823562457,"duration":121662},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"run_admin_agent_fixture","time":{"start":1731823562457,"stop":1731823925658,"duration":363201},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: No successful 'voteEvent' log found | Failed Logs: None","statusTrace":"logs = [], function_name = 'voteOnProposal', trigger_type = 'EVENT'\nmessage = \"No successful 'voteEvent' log found\"\n\n    def assert_successful_log(logs, function_name, trigger_type, message):\n        try:\n>           assert any(\n                log[\"functionName\"] == function_name\n                and log[\"triggerType\"] == trigger_type\n                and log[\"status\"] is True\n                and log[\"success\"] is True\n                for log in logs\n            ), message\nE           AssertionError: No successful 'voteEvent' log found\nE           assert False\nE            +  where False = any(<generator object assert_successful_log.<locals>.<genexpr> at 0x7efd88761d20>)\n\ntest_cases/test_agent_functions.py:6: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_cases.test_agent_functions.TestAgentFunctionExecution object at 0x7efd891d9880>\nrun_admin_agent_fixture = <Response [200]>\nautonomous_agent_api = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7efd8893e5d0>\n\n    @allure.sub_suite(\"EVENT\")\n    @allure.title(\"Test Event Vote Logs\")\n    @allure.feature(\"Vote Event Function\")\n    def test_event_vote_logs(self, run_admin_agent_fixture, autonomous_agent_api):\n        agent_id = run_admin_agent_fixture.json().get(\"id\")\n        logs = (\n            autonomous_agent_api.get_trigger_history(\n                param=\"?agent_id=\" + str(agent_id) + \"&functionName=voteOnProposal\"\n            )\n            .json()\n            .get(\"items\")\n        )\n>       assert_successful_log(\n            logs,\n            function_name=\"voteOnProposal\",\n            trigger_type=\"EVENT\",\n            message=\"No successful 'voteEvent' log found\",\n        )\n\ntest_cases/test_agent_functions.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nlogs = [], function_name = 'voteOnProposal', trigger_type = 'EVENT'\nmessage = \"No successful 'voteEvent' log found\"\n\n    def assert_successful_log(logs, function_name, trigger_type, message):\n        try:\n            assert any(\n                log[\"functionName\"] == function_name\n                and log[\"triggerType\"] == trigger_type\n                and log[\"status\"] is True\n                and log[\"success\"] is True\n                for log in logs\n            ), message\n        except AssertionError:\n            failed_logs = [log for log in logs if log[\"functionName\"] == function_name]\n    \n            if failed_logs:\n                allure.attach(\n                    str(failed_logs),\n                    name=\"Filtered Logs with Matching Function Name\",\n                    attachment_type=allure.attachment_type.JSON,\n                )\n            else:\n                allure.attach(\n                    \"No log found with the given parameters.\",\n                    name=\"No Matching Logs\",\n                    attachment_type=allure.attachment_type.TEXT,\n                )\n>           raise AssertionError(\n                f\"{message} | Failed Logs: {failed_logs if failed_logs else 'None'}\"\n            )\nE           AssertionError: No successful 'voteEvent' log found | Failed Logs: None\n\ntest_cases/test_agent_functions.py:28: AssertionError","steps":[],"attachments":[{"uid":"34ebd4227e8cd3","name":"No Matching Logs","source":"34ebd4227e8cd3.txt","type":"text/plain","size":39}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"autonomous_agent_api::0","time":{"start":1731823928376,"stop":1731823928376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Vote Event Function"},{"name":"parentSuite","value":"Agent Function Execution"},{"name":"subSuite","value":"EVENT"},{"name":"suite","value":"test_agent_functions"},{"name":"host","value":"fv-az711-122"},{"name":"thread","value":"1989-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_agent_functions"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":46,"broken":15,"skipped":0,"passed":20,"unknown":0,"total":81},"items":[{"uid":"13f74ade7da0892","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/79//#testresult/13f74ade7da0892","status":"failed","statusDetails":"AssertionError: No successful 'voteEvent' log found | Failed Logs: None","time":{"start":1731823933668,"stop":1731823933918,"duration":250}},{"uid":"b23a631b4d8d8b14","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/77//#testresult/b23a631b4d8d8b14","status":"passed","time":{"start":1731476630236,"stop":1731476630524,"duration":288}},{"uid":"7929747185f7d57b","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/77//#testresult/7929747185f7d57b","status":"passed","time":{"start":1731475966618,"stop":1731475966866,"duration":248}},{"uid":"a95c91e82164e86a","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/76//#testresult/a95c91e82164e86a","status":"passed","time":{"start":1731474811814,"stop":1731474812077,"duration":263}},{"uid":"7bc1c8ce4ce5b2f","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/75//#testresult/7bc1c8ce4ce5b2f","status":"failed","statusDetails":"AssertionError: No successful 'voteEvent' log found | Failed Logs: None","time":{"start":1730875811778,"stop":1730875811997,"duration":219}},{"uid":"833cc018b8e7564d","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/74//#testresult/833cc018b8e7564d","status":"failed","statusDetails":"AssertionError: No successful 'voteEvent' log found | Failed Logs: None","time":{"start":1730865940777,"stop":1730865941001,"duration":224}},{"uid":"a7287c4636a0e659","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/73//#testresult/a7287c4636a0e659","status":"failed","statusDetails":"AssertionError: No successful 'voteEvent' log found | Failed Logs: None","time":{"start":1730186919036,"stop":1730186919348,"duration":312}},{"uid":"a51cc243e512cc72","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/72//#testresult/a51cc243e512cc72","status":"failed","statusDetails":"AssertionError: No successful 'voteEvent' log found | Failed Logs: None","time":{"start":1730186749145,"stop":1730186749464,"duration":319}},{"uid":"a96b8f18f1ab4b0f","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/71//#testresult/a96b8f18f1ab4b0f","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729748684846,"stop":1729748684846,"duration":0}},{"uid":"e58ff50f613d1614","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/70//#testresult/e58ff50f613d1614","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729680163334,"stop":1729680163334,"duration":0}},{"uid":"e302293c377d8b88","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/69//#testresult/e302293c377d8b88","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729679365837,"stop":1729679365837,"duration":0}},{"uid":"3881e1e22b89c3ce","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/68//#testresult/3881e1e22b89c3ce","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729672197592,"stop":1729672197592,"duration":0}},{"uid":"d3765a1a1fa028f0","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/67//#testresult/d3765a1a1fa028f0","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729667682618,"stop":1729667682618,"duration":0}},{"uid":"be3b304aa1d99a23","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/66//#testresult/be3b304aa1d99a23","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729664172015,"stop":1729664172015,"duration":0}},{"uid":"8199cc44a06d7a4e","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/65//#testresult/8199cc44a06d7a4e","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729574248369,"stop":1729574248369,"duration":0}},{"uid":"b92dbd4b8c07e974","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/64//#testresult/b92dbd4b8c07e974","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729508364648,"stop":1729508364648,"duration":0}},{"uid":"8ee8b5f6dd4d3f5e","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/63//#testresult/8ee8b5f6dd4d3f5e","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729506658931,"stop":1729506658931,"duration":0}},{"uid":"bce4deedc5ced6af","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/62//#testresult/bce4deedc5ced6af","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729245929097,"stop":1729245929097,"duration":0}},{"uid":"fad0291fe04cfe84","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/61//#testresult/fad0291fe04cfe84","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1728386491859,"stop":1728386491859,"duration":0}},{"uid":"e1ef0b18c0bb154e","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/60//#testresult/e1ef0b18c0bb154e","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1728380137757,"stop":1728380137757,"duration":0}}]},"tags":[]},"source":"6c004426b0d4adb5.json","parameterValues":[]}