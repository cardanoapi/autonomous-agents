{"uid":"c5aab5aa8504b1fa","name":"Test Admin Login","fullName":"test_cases.test_auth.TestAdminAuthentication#test_admin_login","historyId":"facd427b63b92a7b83f4ac87ab0c7af0","time":{"start":1728362224028,"stop":1728362224028,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","statusTrace":"autonomous_agent_api = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f411fc12330>\n\n    @pytest.fixture(scope=\"session\")\n    def admin_login_response(autonomous_agent_api):\n>       return autonomous_agent_api.login_user(body=admin_signed_data.model_dump())\n\ntest_cases/fixtures/auth.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/autonomous_agent_api.py:148: in login_user\n    return self._post(\"/auth/login\", body=body)\nlib/autonomous_agent_api.py:80: in _post\n    return self._request(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f411fc12330>\nmethod = 'POST', endpoint = '/auth/login', param = None\nbody = {'key': 'a5010102581de01b91f0800ce863abc2b3cc85321d2c8d554ca491767fc68ad5bcf4f3032720062158209e97c896a81a3bc9ec5701ebc...475fbd669075949ff40d134d13e3626655d64fb64b2740875e084104ebe8e70c03ef20639d2fe449a57f63c78d9b03543addf0131a57a643e130b'}\nheaders = None\n\n    def _request(\n        self,\n        method: str,\n        endpoint: str,\n        param: Any | None = None,\n        body: Any | None = None,\n        headers: dict | None = None,\n    ) -> Response:\n        endpoint = endpoint if endpoint.startswith(\"/\") else f\"/{endpoint}\"\n        full_url = self._base_url + endpoint\n        full_url_with_parms = full_url + param if param else full_url\n    \n        response = self._session.request(\n            method=method, url=full_url_with_parms, json=body, headers=headers\n        )\n    \n        try:\n            response_json = response.json()\n            response_json_str = json.dumps(response_json)[:200]\n        except:\n            response_json_str = \"Response not as Expected. Something is Wrong\"\n    \n        request_info = {\n            \"method\": method,\n            \"endpoint\": endpoint,\n            \"path_param\": param,\n            \"json\": json.dumps(body),\n            \"status_code\": response.status_code,\n            \"response_json\": response_json_str,\n        }\n    \n        self.requests_log.append(request_info)\n    \n>       assert (\n            200 <= response.status_code <= 299\n        ), f\"Expected {method} {endpoint} to succeed but got statusCode: {response.status_code} : body: {response.text}\"\nE       AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\nE       <head><title>503 Service Temporarily Unavailable</title></head>\r\nE       <body>\r\nE       <center><h1>503 Service Temporarily Unavailable</h1></center>\r\nE       <hr><center>nginx/1.23.2</center>\r\nE       </body>\r\nE       </html>\n\nlib/autonomous_agent_api.py:49: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"autonomous_agent_api","time":{"start":1728362223066,"stop":1728362223066,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"admin_login_response","time":{"start":1728362223676,"stop":1728362223808,"duration":132},"status":"failed","statusMessage":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>\r\n\n","statusTrace":"  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1139, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 897, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/test_cases/fixtures/auth.py\", line 24, in admin_login_response\n    return autonomous_agent_api.login_user(body=admin_signed_data.model_dump())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 148, in login_user\n    return self._post(\"/auth/login\", body=body)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 80, in _post\n    return self._request(\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 49, in _request\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"autonomous_agent_api::0","time":{"start":1728362224241,"stop":1728362224241,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"Admin Authentication"},{"name":"feature","value":"Admin Login"},{"name":"suite","value":"test_auth"},{"name":"subSuite","value":"TestAdminAuthentication"},{"name":"host","value":"fv-az770-527"},{"name":"thread","value":"2045-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_auth"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":1,"skipped":0,"passed":50,"unknown":0,"total":59},"items":[{"uid":"7f61629e71abca76","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/57//#testresult/7f61629e71abca76","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728055093326,"stop":1728055093326,"duration":0}},{"uid":"b733c305eb0abaad","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/56//#testresult/b733c305eb0abaad","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728054164058,"stop":1728054164058,"duration":0}},{"uid":"7a9cd462f3ac5bf7","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/55//#testresult/7a9cd462f3ac5bf7","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728031538393,"stop":1728031538393,"duration":0}},{"uid":"9369ac1a8c311f8a","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/54//#testresult/9369ac1a8c311f8a","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728022312983,"stop":1728022312983,"duration":0}},{"uid":"986b81b2181a68c4","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/53//#testresult/986b81b2181a68c4","status":"passed","time":{"start":1728020023814,"stop":1728020023814,"duration":0}},{"uid":"e5cbd34de5fb8b6c","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/52//#testresult/e5cbd34de5fb8b6c","status":"broken","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))","time":{"start":1728019912149,"stop":1728019912149,"duration":0}},{"uid":"bb6323abd5a85427","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/51//#testresult/bb6323abd5a85427","status":"passed","time":{"start":1728015619181,"stop":1728015619181,"duration":0}},{"uid":"8a6bef5de03313e1","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/50//#testresult/8a6bef5de03313e1","status":"passed","time":{"start":1727944579692,"stop":1727944579692,"duration":0}},{"uid":"b7eabae602b52e23","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/49//#testresult/b7eabae602b52e23","status":"passed","time":{"start":1727942897350,"stop":1727942897350,"duration":0}},{"uid":"d33fc9112e3c5d74","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/48//#testresult/d33fc9112e3c5d74","status":"passed","time":{"start":1727841528149,"stop":1727841528149,"duration":0}},{"uid":"d28f5f8d8d5b7d9b","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/47//#testresult/d28f5f8d8d5b7d9b","status":"passed","time":{"start":1727432538572,"stop":1727432538572,"duration":0}},{"uid":"5f518343daddbf2d","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/46//#testresult/5f518343daddbf2d","status":"passed","time":{"start":1727269158687,"stop":1727269158687,"duration":0}},{"uid":"215130d5d82ad40e","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/45//#testresult/215130d5d82ad40e","status":"passed","time":{"start":1727260703353,"stop":1727260703354,"duration":1}},{"uid":"60e543b1a485bd0b","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/44//#testresult/60e543b1a485bd0b","status":"passed","time":{"start":1727257912673,"stop":1727257912673,"duration":0}},{"uid":"210a971837a5163","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/43//#testresult/210a971837a5163","status":"passed","time":{"start":1727257608781,"stop":1727257608781,"duration":0}},{"uid":"cb57685b576f8796","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/42//#testresult/cb57685b576f8796","status":"passed","time":{"start":1727255163032,"stop":1727255163032,"duration":0}},{"uid":"4549ea6ada908bf5","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/41//#testresult/4549ea6ada908bf5","status":"passed","time":{"start":1727252534788,"stop":1727252534788,"duration":0}},{"uid":"4c97a45af12839ca","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/40//#testresult/4c97a45af12839ca","status":"passed","time":{"start":1727252438744,"stop":1727252438744,"duration":0}},{"uid":"aeb3bf32d6e692c0","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/39//#testresult/aeb3bf32d6e692c0","status":"passed","time":{"start":1727248098647,"stop":1727248098647,"duration":0}},{"uid":"a7608465aedbdfd0","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/38//#testresult/a7608465aedbdfd0","status":"passed","time":{"start":1727240094429,"stop":1727240094429,"duration":0}}]},"tags":[]},"source":"c5aab5aa8504b1fa.json","parameterValues":[]}