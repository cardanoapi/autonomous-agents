{"uid":"a37d6994cdd3ca7f","name":"Test Event Vote Logs","fullName":"test_cases.test_agent_functions.TestAgentFunctionExecution#test_event_vote_logs","historyId":"b479afaeccaeb0b2b306544ea95f6f33","time":{"start":1728362223863,"stop":1728362223863,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","statusTrace":"autonomous_agent_api = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f411fc12330>\n\n    @pytest.fixture(scope=\"session\")\n    def admin_login_response(autonomous_agent_api):\n>       return autonomous_agent_api.login_user(body=admin_signed_data.model_dump())\n\ntest_cases/fixtures/auth.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/autonomous_agent_api.py:148: in login_user\n    return self._post(\"/auth/login\", body=body)\nlib/autonomous_agent_api.py:80: in _post\n    return self._request(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f411fc12330>\nmethod = 'POST', endpoint = '/auth/login', param = None\nbody = {'key': 'a5010102581de01b91f0800ce863abc2b3cc85321d2c8d554ca491767fc68ad5bcf4f3032720062158209e97c896a81a3bc9ec5701ebc...475fbd669075949ff40d134d13e3626655d64fb64b2740875e084104ebe8e70c03ef20639d2fe449a57f63c78d9b03543addf0131a57a643e130b'}\nheaders = None\n\n    def _request(\n        self,\n        method: str,\n        endpoint: str,\n        param: Any | None = None,\n        body: Any | None = None,\n        headers: dict | None = None,\n    ) -> Response:\n        endpoint = endpoint if endpoint.startswith(\"/\") else f\"/{endpoint}\"\n        full_url = self._base_url + endpoint\n        full_url_with_parms = full_url + param if param else full_url\n    \n        response = self._session.request(\n            method=method, url=full_url_with_parms, json=body, headers=headers\n        )\n    \n        try:\n            response_json = response.json()\n            response_json_str = json.dumps(response_json)[:200]\n        except:\n            response_json_str = \"Response not as Expected. Something is Wrong\"\n    \n        request_info = {\n            \"method\": method,\n            \"endpoint\": endpoint,\n            \"path_param\": param,\n            \"json\": json.dumps(body),\n            \"status_code\": response.status_code,\n            \"response_json\": response_json_str,\n        }\n    \n        self.requests_log.append(request_info)\n    \n>       assert (\n            200 <= response.status_code <= 299\n        ), f\"Expected {method} {endpoint} to succeed but got statusCode: {response.status_code} : body: {response.text}\"\nE       AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\nE       <head><title>503 Service Temporarily Unavailable</title></head>\r\nE       <body>\r\nE       <center><h1>503 Service Temporarily Unavailable</h1></center>\r\nE       <hr><center>nginx/1.23.2</center>\r\nE       </body>\r\nE       </html>\n\nlib/autonomous_agent_api.py:49: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"autonomous_agent_api","time":{"start":1728362223066,"stop":1728362223066,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"admin_login_response","time":{"start":1728362223676,"stop":1728362223808,"duration":132},"status":"failed","statusMessage":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>\r\n\n","statusTrace":"  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1139, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 897, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/test_cases/fixtures/auth.py\", line 24, in admin_login_response\n    return autonomous_agent_api.login_user(body=admin_signed_data.model_dump())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 148, in login_user\n    return self._post(\"/auth/login\", body=body)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 80, in _post\n    return self._request(\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 49, in _request\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"autonomous_agent_api::0","time":{"start":1728362224241,"stop":1728362224241,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"Agent Function Execution"},{"name":"feature","value":"Vote Event Function"},{"name":"subSuite","value":"EVENT"},{"name":"suite","value":"test_agent_functions"},{"name":"host","value":"fv-az770-527"},{"name":"thread","value":"2045-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_agent_functions"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":40,"broken":2,"skipped":0,"passed":17,"unknown":0,"total":59},"items":[{"uid":"73dfb01d5cef6b94","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/57//#testresult/73dfb01d5cef6b94","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728055093176,"stop":1728055093176,"duration":0}},{"uid":"c53bec39fcb34638","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/56//#testresult/c53bec39fcb34638","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728054163857,"stop":1728054163857,"duration":0}},{"uid":"1753d92501bfbaa4","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/55//#testresult/1753d92501bfbaa4","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728031538242,"stop":1728031538242,"duration":0}},{"uid":"fff5ba23ae61250e","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/54//#testresult/fff5ba23ae61250e","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728022312812,"stop":1728022312812,"duration":0}},{"uid":"cd78739d6793171a","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/53//#testresult/cd78739d6793171a","status":"broken","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))","time":{"start":1728020023048,"stop":1728020023048,"duration":0}},{"uid":"f90b53190290727","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/52//#testresult/f90b53190290727","status":"broken","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))","time":{"start":1728019911164,"stop":1728019911164,"duration":0}},{"uid":"734c9cefd40327aa","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/51//#testresult/734c9cefd40327aa","status":"failed","statusDetails":"AssertionError: No successful 'voteEvent' log found | Failed Logs: None","time":{"start":1728015618685,"stop":1728015618939,"duration":254}},{"uid":"9114dbb33d0b71e3","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/50//#testresult/9114dbb33d0b71e3","status":"failed","statusDetails":"AssertionError: No successful 'voteEvent' log found | Failed Logs: None","time":{"start":1727944579226,"stop":1727944579453,"duration":227}},{"uid":"af5001189f4eb896","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/49//#testresult/af5001189f4eb896","status":"failed","statusDetails":"AssertionError: No successful 'voteEvent' log found | Failed Logs: None","time":{"start":1727942896666,"stop":1727942896979,"duration":313}},{"uid":"bc2c13ced5743cf5","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/48//#testresult/bc2c13ced5743cf5","status":"passed","time":{"start":1727841527654,"stop":1727841527901,"duration":247}},{"uid":"32e1c65c9c7ed58a","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/47//#testresult/32e1c65c9c7ed58a","status":"passed","time":{"start":1727432538139,"stop":1727432538337,"duration":198}},{"uid":"ce1217b572b9d1f","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/46//#testresult/ce1217b572b9d1f","status":"passed","time":{"start":1727269158038,"stop":1727269158320,"duration":282}},{"uid":"57f7da402c7c5fc3","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/45//#testresult/57f7da402c7c5fc3","status":"passed","time":{"start":1727260702823,"stop":1727260703108,"duration":285}},{"uid":"c3fa849aa2c6e9c1","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/44//#testresult/c3fa849aa2c6e9c1","status":"failed","statusDetails":"AssertionError: No successful 'voteEvent' log found | Failed Logs: [{'agentId': 'c8d94e5c-9065-49ca-97d5-8e374c719c8b', 'functionName': 'voteOnProposal', 'status': True, 'success': False, 'timestamp': '2024-09-25T09:46:37.367000+00:00', 'message': \"Cannot read properties of undefined (reading 'url')\", 'triggerType': 'EVENT', 'txHash': None, 'instanceIndex': 0}]","time":{"start":1727257912192,"stop":1727257912400,"duration":208}},{"uid":"216d50b81f9b6b44","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/43//#testresult/216d50b81f9b6b44","status":"failed","statusDetails":"AssertionError: No successful 'voteEvent' log found | Failed Logs: [{'agentId': '6647b11e-6b76-4230-bec8-7ee28000308d', 'functionName': 'voteOnProposal', 'status': True, 'success': False, 'timestamp': '2024-09-25T09:46:37.363000+00:00', 'message': \"Cannot read properties of undefined (reading 'url')\", 'triggerType': 'EVENT', 'txHash': None, 'instanceIndex': 0}, {'agentId': '6647b11e-6b76-4230-bec8-7ee28000308d', 'functionName': 'voteOnProposal', 'status': True, 'success': False, 'timestamp': '2024-09-25T09:42:03.456000+00:00', 'message': \"Cannot read properties of undefined (reading 'url')\", 'triggerType': 'EVENT', 'txHash': None, 'instanceIndex': 0}]","time":{"start":1727257608278,"stop":1727257608505,"duration":227}},{"uid":"881e08ffe6ba9943","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/42//#testresult/881e08ffe6ba9943","status":"failed","statusDetails":"AssertionError: No successful 'voteEvent' log found | Failed Logs: [{'agentId': 'cda7c975-e177-4b50-bcdd-d2f7429f345c', 'functionName': 'voteOnProposal', 'status': True, 'success': False, 'timestamp': '2024-09-25T09:05:17.358000+00:00', 'message': \"Cannot read properties of undefined (reading 'url')\", 'triggerType': 'EVENT', 'txHash': None, 'instanceIndex': 0}, {'agentId': 'cda7c975-e177-4b50-bcdd-d2f7429f345c', 'functionName': 'voteOnProposal', 'status': True, 'success': False, 'timestamp': '2024-09-25T09:01:34.675000+00:00', 'message': \"Cannot read properties of undefined (reading 'url')\", 'triggerType': 'EVENT', 'txHash': None, 'instanceIndex': 0}, {'agentId': 'cda7c975-e177-4b50-bcdd-d2f7429f345c', 'functionName': 'voteOnProposal', 'status': True, 'success': False, 'timestamp': '2024-09-25T09:01:21.372000+00:00', 'message': \"Cannot read properties of undefined (reading 'url')\", 'triggerType': 'EVENT', 'txHash': None, 'instanceIndex': 0}]","time":{"start":1727255162540,"stop":1727255162756,"duration":216}},{"uid":"73d5a9f4395736e7","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/41//#testresult/73d5a9f4395736e7","status":"failed","statusDetails":"AssertionError: No successful 'voteEvent' log found | Failed Logs: [{'agentId': 'a25cfd68-3562-47d5-a099-c036dc4b14cb', 'functionName': 'voteOnProposal', 'status': True, 'success': False, 'timestamp': '2024-09-25T08:17:04.350000+00:00', 'message': \"Cannot read properties of undefined (reading 'url')\", 'triggerType': 'EVENT', 'txHash': None, 'instanceIndex': 0}]","time":{"start":1727252534315,"stop":1727252534523,"duration":208}},{"uid":"88b3ee991c27af23","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/40//#testresult/88b3ee991c27af23","status":"failed","statusDetails":"AssertionError: No successful 'voteEvent' log found | Failed Logs: [{'agentId': '20fb53a0-b21b-4222-bef5-f5aeca914e43', 'functionName': 'voteOnProposal', 'status': True, 'success': False, 'timestamp': '2024-09-25T08:17:04.469000+00:00', 'message': \"Cannot read properties of undefined (reading 'url')\", 'triggerType': 'EVENT', 'txHash': None, 'instanceIndex': 0}, {'agentId': '20fb53a0-b21b-4222-bef5-f5aeca914e43', 'functionName': 'voteOnProposal', 'status': True, 'success': False, 'timestamp': '2024-09-25T08:15:37.100000+00:00', 'message': \"Cannot read properties of undefined (reading 'url')\", 'triggerType': 'EVENT', 'txHash': None, 'instanceIndex': 0}]","time":{"start":1727252438080,"stop":1727252438350,"duration":270}},{"uid":"4a2672a434869af4","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/39//#testresult/4a2672a434869af4","status":"failed","statusDetails":"AssertionError: No successful 'voteEvent' log found | Failed Logs: [{'agentId': '93f025d8-4b68-45b9-a45d-34c3d18ca9de', 'functionName': 'voteOnProposal', 'status': True, 'success': False, 'timestamp': '2024-09-25T07:03:36.733000+00:00', 'message': \"Cannot read properties of undefined (reading 'url')\", 'triggerType': 'EVENT', 'txHash': None, 'instanceIndex': 0}]","time":{"start":1727248097959,"stop":1727248098248,"duration":289}},{"uid":"570f8d58bc0a53b0","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/38//#testresult/570f8d58bc0a53b0","status":"failed","statusDetails":"AssertionError: No successful 'voteEvent' log found | Failed Logs: None","time":{"start":1727240093820,"stop":1727240094075,"duration":255}}]},"tags":[]},"source":"a37d6994cdd3ca7f.json","parameterValues":[]}