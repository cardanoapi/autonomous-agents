{"uid":"a7e7ad42009a7fb5","name":"Test Get Admin Agent","fullName":"test_cases.test_agent.TestAgentManagement#test_get_agent","historyId":"06580cb02b339767857019902ae34541","time":{"start":1728362223675,"stop":1728362223675,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","statusTrace":"autonomous_agent_api = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f411fc12330>\n\n    @pytest.fixture(scope=\"session\")\n    def admin_login_response(autonomous_agent_api):\n>       return autonomous_agent_api.login_user(body=admin_signed_data.model_dump())\n\ntest_cases/fixtures/auth.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/autonomous_agent_api.py:148: in login_user\n    return self._post(\"/auth/login\", body=body)\nlib/autonomous_agent_api.py:80: in _post\n    return self._request(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f411fc12330>\nmethod = 'POST', endpoint = '/auth/login', param = None\nbody = {'key': 'a5010102581de01b91f0800ce863abc2b3cc85321d2c8d554ca491767fc68ad5bcf4f3032720062158209e97c896a81a3bc9ec5701ebc...475fbd669075949ff40d134d13e3626655d64fb64b2740875e084104ebe8e70c03ef20639d2fe449a57f63c78d9b03543addf0131a57a643e130b'}\nheaders = None\n\n    def _request(\n        self,\n        method: str,\n        endpoint: str,\n        param: Any | None = None,\n        body: Any | None = None,\n        headers: dict | None = None,\n    ) -> Response:\n        endpoint = endpoint if endpoint.startswith(\"/\") else f\"/{endpoint}\"\n        full_url = self._base_url + endpoint\n        full_url_with_parms = full_url + param if param else full_url\n    \n        response = self._session.request(\n            method=method, url=full_url_with_parms, json=body, headers=headers\n        )\n    \n        try:\n            response_json = response.json()\n            response_json_str = json.dumps(response_json)[:200]\n        except:\n            response_json_str = \"Response not as Expected. Something is Wrong\"\n    \n        request_info = {\n            \"method\": method,\n            \"endpoint\": endpoint,\n            \"path_param\": param,\n            \"json\": json.dumps(body),\n            \"status_code\": response.status_code,\n            \"response_json\": response_json_str,\n        }\n    \n        self.requests_log.append(request_info)\n    \n>       assert (\n            200 <= response.status_code <= 299\n        ), f\"Expected {method} {endpoint} to succeed but got statusCode: {response.status_code} : body: {response.text}\"\nE       AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\nE       <head><title>503 Service Temporarily Unavailable</title></head>\r\nE       <body>\r\nE       <center><h1>503 Service Temporarily Unavailable</h1></center>\r\nE       <hr><center>nginx/1.23.2</center>\r\nE       </body>\r\nE       </html>\n\nlib/autonomous_agent_api.py:49: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"autonomous_agent_api","time":{"start":1728362223066,"stop":1728362223066,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"admin_login_response","time":{"start":1728362223676,"stop":1728362223808,"duration":132},"status":"failed","statusMessage":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>\r\n\n","statusTrace":"  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1139, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 897, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/test_cases/fixtures/auth.py\", line 24, in admin_login_response\n    return autonomous_agent_api.login_user(body=admin_signed_data.model_dump())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 148, in login_user\n    return self._post(\"/auth/login\", body=body)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 80, in _post\n    return self._request(\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 49, in _request\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"autonomous_agent_api::0","time":{"start":1728362224241,"stop":1728362224241,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Get Admin Agent"},{"name":"parentSuite","value":"Agent Management"},{"name":"suite","value":"test_agent"},{"name":"subSuite","value":"TestAgentManagement"},{"name":"host","value":"fv-az770-527"},{"name":"thread","value":"2045-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_agent"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":2,"skipped":0,"passed":49,"unknown":0,"total":59},"items":[{"uid":"d6bd5708a25a627d","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/57//#testresult/d6bd5708a25a627d","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728055093004,"stop":1728055093004,"duration":0}},{"uid":"b019492effce764d","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/56//#testresult/b019492effce764d","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728054163632,"stop":1728054163632,"duration":0}},{"uid":"ccc35caf76d06966","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/55//#testresult/ccc35caf76d06966","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728031538069,"stop":1728031538069,"duration":0}},{"uid":"fd699a8314cc87bd","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/54//#testresult/fd699a8314cc87bd","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728022312623,"stop":1728022312623,"duration":0}},{"uid":"d98fcdc7b25d57fd","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/53//#testresult/d98fcdc7b25d57fd","status":"broken","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))","time":{"start":1728020021666,"stop":1728020021666,"duration":0}},{"uid":"ffea9cea14b67bb0","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/52//#testresult/ffea9cea14b67bb0","status":"broken","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))","time":{"start":1728019910354,"stop":1728019910354,"duration":0}},{"uid":"3412cf277c6b2119","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/51//#testresult/3412cf277c6b2119","status":"passed","time":{"start":1728015133464,"stop":1728015133833,"duration":369}},{"uid":"5038c59c2feeb9e0","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/50//#testresult/5038c59c2feeb9e0","status":"passed","time":{"start":1727944093464,"stop":1727944093734,"duration":270}},{"uid":"fe2954b9f6fdc1f1","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/49//#testresult/fe2954b9f6fdc1f1","status":"passed","time":{"start":1727942410524,"stop":1727942410886,"duration":362}},{"uid":"e66c4147155852fa","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/48//#testresult/e66c4147155852fa","status":"passed","time":{"start":1727841041963,"stop":1727841042356,"duration":393}},{"uid":"d2192842663d03da","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/47//#testresult/d2192842663d03da","status":"passed","time":{"start":1727432053070,"stop":1727432053323,"duration":253}},{"uid":"96ab59f75730c21e","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/46//#testresult/96ab59f75730c21e","status":"passed","time":{"start":1727268671641,"stop":1727268672057,"duration":416}},{"uid":"8060de19b6063b74","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/45//#testresult/8060de19b6063b74","status":"passed","time":{"start":1727260217784,"stop":1727260217913,"duration":129}},{"uid":"afe8a9649eae6304","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/44//#testresult/afe8a9649eae6304","status":"passed","time":{"start":1727257426824,"stop":1727257427092,"duration":268}},{"uid":"b6fea1c81ea9221c","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/43//#testresult/b6fea1c81ea9221c","status":"passed","time":{"start":1727257122377,"stop":1727257122516,"duration":139}},{"uid":"c33aaf38c3300043","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/42//#testresult/c33aaf38c3300043","status":"passed","time":{"start":1727254677334,"stop":1727254677660,"duration":326}},{"uid":"b288a5aca7afb2e4","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/41//#testresult/b288a5aca7afb2e4","status":"passed","time":{"start":1727252048424,"stop":1727252048547,"duration":123}},{"uid":"f17f40f80e3fbcb4","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/40//#testresult/f17f40f80e3fbcb4","status":"passed","time":{"start":1727251952204,"stop":1727251952394,"duration":190}},{"uid":"73c41c393bd28649","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/39//#testresult/73c41c393bd28649","status":"passed","time":{"start":1727247611777,"stop":1727247611970,"duration":193}},{"uid":"8d956065980b6c16","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/38//#testresult/8d956065980b6c16","status":"passed","time":{"start":1727239606607,"stop":1727239607104,"duration":497}}]},"tags":[]},"source":"a7e7ad42009a7fb5.json","parameterValues":[]}