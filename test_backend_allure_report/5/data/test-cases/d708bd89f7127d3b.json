{"uid":"d708bd89f7127d3b","name":"Test Event Vote Logs","fullName":"test_cases.test_agent_functions.TestAgentFunctionExecution#test_event_vote_logs","historyId":"b479afaeccaeb0b2b306544ea95f6f33","time":{"start":1724132698971,"stop":1724132699186,"duration":215},"status":"failed","statusMessage":"AssertionError: No successful 'voteEvent' log found\nassert False\n +  where False = any(<generator object assert_successful_log.<locals>.<genexpr> at 0x7fea5d97ef80>)","statusTrace":"self = <test_cases.test_agent_functions.TestAgentFunctionExecution object at 0x7fea5e134fe0>\nrun_admin_agent_fixture = <Response [200]>\nautonomous_agent_api = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7fea5f5de720>\n\n    @allure.sub_suite(\"EVENT\")\n    @allure.title(\"Test Event Vote Logs\")\n    @allure.feature(\"Vote Event Function\")\n    def test_event_vote_logs(self, run_admin_agent_fixture, autonomous_agent_api):\n        agent_id = run_admin_agent_fixture.json().get(\"id\")\n        logs = (\n            autonomous_agent_api.get_trigger_history(\n                param=\"?agent_id=\" + str(agent_id) + \"&functionName=voteOnProposal\"\n            )\n            .json()\n            .get(\"items\")\n        )\n>       assert_successful_log(\n            logs,\n            function_name=\"voteOnProposal\",\n            trigger_type=\"EVENT\",\n            message=\"No successful 'voteEvent' log found\",\n        )\n\ntest_cases/test_agent_functions.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nlogs = [{'agentId': '12eaf7e2-5f5a-4bf2-8074-8781327e5071', 'functionName': 'transferADA', 'message': '', 'status': True, ......2d36120d0cd4333d8addf80947d151791c9d17dfbca68f5f3f660ea65f31\"}) (TxIx {unTxIx = 0})])))]))', 'status': True, ...}, ...]\nfunction_name = 'voteOnProposal', trigger_type = 'EVENT'\nmessage = \"No successful 'voteEvent' log found\"\n\n    def assert_successful_log(logs, function_name, trigger_type, message):\n        \"\"\"Helper function to assert a successful log entry with specific criteria.\"\"\"\n        try:\n>           assert any(\n                log[\"functionName\"] == function_name\n                and log[\"triggerType\"] == trigger_type\n                and log[\"status\"] == True\n                and log[\"success\"] == True\n                for log in logs\n            ), message\nE           AssertionError: No successful 'voteEvent' log found\nE           assert False\nE            +  where False = any(<generator object assert_successful_log.<locals>.<genexpr> at 0x7fea5d97ef80>)\n\ntest_cases/test_agent_functions.py:6: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"autonomous_agent_api","time":{"start":1724132436890,"stop":1724132436891,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"admin_login_response","time":{"start":1724132437543,"stop":1724132437669,"duration":126},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"admin_login_cookie","time":{"start":1724132437669,"stop":1724132437669,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_template_fixture","time":{"start":1724132437669,"stop":1724132437802,"duration":133},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"edit_template_fixture","time":{"start":1724132437802,"stop":1724132437955,"duration":153},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_admin_agent_fixture","time":{"start":1724132437955,"stop":1724132438099,"duration":144},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"edit_admin_agent_fixture","time":{"start":1724132438482,"stop":1724132438636,"duration":154},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"load_funds_to_agent_address","time":{"start":1724132438638,"stop":1724132560040,"duration":121402},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"run_admin_agent_fixture","time":{"start":1724132560040,"stop":1724132697791,"duration":137751},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: No successful 'voteEvent' log found\nassert False\n +  where False = any(<generator object assert_successful_log.<locals>.<genexpr> at 0x7fea5d97ef80>)","statusTrace":"self = <test_cases.test_agent_functions.TestAgentFunctionExecution object at 0x7fea5e134fe0>\nrun_admin_agent_fixture = <Response [200]>\nautonomous_agent_api = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7fea5f5de720>\n\n    @allure.sub_suite(\"EVENT\")\n    @allure.title(\"Test Event Vote Logs\")\n    @allure.feature(\"Vote Event Function\")\n    def test_event_vote_logs(self, run_admin_agent_fixture, autonomous_agent_api):\n        agent_id = run_admin_agent_fixture.json().get(\"id\")\n        logs = (\n            autonomous_agent_api.get_trigger_history(\n                param=\"?agent_id=\" + str(agent_id) + \"&functionName=voteOnProposal\"\n            )\n            .json()\n            .get(\"items\")\n        )\n>       assert_successful_log(\n            logs,\n            function_name=\"voteOnProposal\",\n            trigger_type=\"EVENT\",\n            message=\"No successful 'voteEvent' log found\",\n        )\n\ntest_cases/test_agent_functions.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nlogs = [{'agentId': '12eaf7e2-5f5a-4bf2-8074-8781327e5071', 'functionName': 'transferADA', 'message': '', 'status': True, ......2d36120d0cd4333d8addf80947d151791c9d17dfbca68f5f3f660ea65f31\"}) (TxIx {unTxIx = 0})])))]))', 'status': True, ...}, ...]\nfunction_name = 'voteOnProposal', trigger_type = 'EVENT'\nmessage = \"No successful 'voteEvent' log found\"\n\n    def assert_successful_log(logs, function_name, trigger_type, message):\n        \"\"\"Helper function to assert a successful log entry with specific criteria.\"\"\"\n        try:\n>           assert any(\n                log[\"functionName\"] == function_name\n                and log[\"triggerType\"] == trigger_type\n                and log[\"status\"] == True\n                and log[\"success\"] == True\n                for log in logs\n            ), message\nE           AssertionError: No successful 'voteEvent' log found\nE           assert False\nE            +  where False = any(<generator object assert_successful_log.<locals>.<genexpr> at 0x7fea5d97ef80>)\n\ntest_cases/test_agent_functions.py:6: AssertionError","steps":[],"attachments":[{"uid":"b35cfaaeca463039","name":"Logs","source":"b35cfaaeca463039.json","type":"application/json","size":29156}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"autonomous_agent_api::0","time":{"start":1724132699986,"stop":1724132699986,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Vote Event Function"},{"name":"parentSuite","value":"Agent Function Execution"},{"name":"subSuite","value":"EVENT"},{"name":"suite","value":"test_agent_functions"},{"name":"host","value":"fv-az1776-229"},{"name":"thread","value":"2016-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_agent_functions"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":6},"items":[{"uid":"879ad3c3a39d22dc","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/4//#testresult/879ad3c3a39d22dc","status":"passed","time":{"start":1723720438602,"stop":1723720438820,"duration":218}},{"uid":"afeb673fdf0af18c","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/3//#testresult/afeb673fdf0af18c","status":"passed","time":{"start":1723719853522,"stop":1723719853774,"duration":252}},{"uid":"9d60faa2bde518b0","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/2//#testresult/9d60faa2bde518b0","status":"failed","statusDetails":"AssertionError: No successful 'voteEvent' log found\nassert False\n +  where False = any(<generator object assert_successful_log.<locals>.<genexpr> at 0x7f69feb826c0>)","time":{"start":1723717605361,"stop":1723717605572,"duration":211}},{"uid":"ed78846e1d89f07e","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/1//#testresult/ed78846e1d89f07e","status":"passed","time":{"start":1723716846200,"stop":1723716846504,"duration":304}},{"uid":"f6a989994f41c5ea","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/1//#testresult/f6a989994f41c5ea","status":"passed","time":{"start":1723716209953,"stop":1723716210253,"duration":300}}]},"tags":[]},"source":"d708bd89f7127d3b.json","parameterValues":[]}