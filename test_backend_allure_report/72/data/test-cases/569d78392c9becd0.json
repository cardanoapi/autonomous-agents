{"uid":"569d78392c9becd0","name":"Test Manual Info Action Proposal Logs","fullName":"test_cases.test_agent_functions.TestAgentFunctionExecution#test_manual_info_action_proposal_logs","historyId":"011c6a73c3f72f6a7ca823b0704e81e3","time":{"start":1730186748768,"stop":1730186749111,"duration":343},"status":"failed","statusMessage":"AssertionError: No successful 'create infoAction proposal' log found | Failed Logs: [{'agentId': '27bbe84b-c1b8-46ae-a9c0-ab83be52cd30', 'functionName': 'createInfoGovAction', 'status': True, 'success': False, 'timestamp': '2024-10-29T07:20:28.844000+00:00', 'message': 'KubærApi [Status 400] : Missing Balance :[(AdaAssetId,400000)]', 'triggerType': 'MANUAL', 'txHash': None, 'instanceIndex': 0, 'parameters': [{'name': 'anchor', 'value': {'url': 'agents.cardanoapi.io', 'dataHash': '1111111111111111111111111111111111111111111111111111111111111111'}}], 'result': 'KubærApi [Status 400] : Missing Balance :[(AdaAssetId,400000)]', 'internal': [{'result': {'url': 'https://metadata.cardanoapi.io/data/2129922f969072dfe2136b5e0d85008b7088f420139b6e4e1c0fd5584ff05751', 'dataHash': '2129922f969072dfe2136b5e0d85008b7088f420139b6e4e1c0fd5584ff05751'}, 'message': '', 'success': True, 'timeStamp': '2024-10-29T07:20:28.784Z', 'parameters': ['{\"@context\":{\"@language\":\"en-us\",\"CIP100\":\"https://github.com/cardano-foundation/CIPs/blob/master/CIP-0100/README.md#\",\"CIP108\":\"https://github.com/cardano-foundation/CIPs/blob/master/CIP-0108/README.md#\",\"hashAlgorithm\":\"CIP100:hashAlgorithm\",\"body\":{\"@id\":\"CIP108:body\",\"@context\":{\"references\":{\"@id\":\"CIP108:references\",\"@container\":\"@set\",\"@context\":{\"GovernanceMetadata\":\"CIP100:GovernanceMetadataReference\",\"Other\":\"CIP100:OtherReference\",\"label\":\"CIP100:reference-label\",\"uri\":\"CIP100:reference-uri\",\"referenceHash\":{\"@id\":\"CIP108:referenceHash\",\"@context\":{\"hashDigest\":\"CIP108:hashDigest\",\"hashAlgorithm\":\"CIP100:hashAlgorithm\"}}}},\"title\":\"CIP108:title\",\"abstract\":\"CIP108:abstract\",\"motivation\":\"CIP108:motivation\",\"rationale\":\"CIP108:rationale\"}},\"authors\":{\"@id\":\"CIP100:authors\",\"@container\":\"@set\",\"@context\":{\"name\":\"http://xmlns.com/foaf/0.1/name\",\"witness\":{\"@id\":\"CIP100:witness\",\"@context\":{\"witnessAlgorithm\":\"CIP100:witnessAlgorithm\",\"publicKey\":\"CIP100:publicKey\",\"signature\":\"CIP100:signature\"}}}}},\"authors\":[],\"hashAlgorithm\":\"blake2b-256\",\"body\":{\"abstract\":\"This proposal is created automatically by agent: d4dceb32-34ee-4ae2-aa23-1993a900d604#0\",\"motivation\":\"This proposal is automatically generated by autonomous-agent-testing.\",\"references\":[{\"@type\":\"Other\",\"label\":\"autonomous-agent-testing\",\"uri\":\"https://cardanoapi.github.io/autonomous-agents/archietecture_docusaurus/docs/architecture\"}],\"title\":\"Proposal By Agent d4dceb32-34ee-4ae2-aa23-1993a900d604#0\",\"rationale\":\"This proposal was created as a part of testing for autonomous-agent-testing\"}}'], 'function_name': 'saveMetadata'}]}]","statusTrace":"logs = [{'agentId': '27bbe84b-c1b8-46ae-a9c0-ab83be52cd30', 'functionName': 'transferADA', 'instanceIndex': 0, 'internal': No...: 'https://metadata.cardanoapi.io/data/2129922f969072dfe2136b5e0d85008b7088f420139b6e4e1c0fd5584ff05751'}, ...}], ...}]\nfunction_name = 'createInfoGovAction', trigger_type = 'MANUAL'\nmessage = \"No successful 'create infoAction proposal' log found\"\n\n    def assert_successful_log(logs, function_name, trigger_type, message):\n        try:\n>           assert any(\n                log[\"functionName\"] == function_name\n                and log[\"triggerType\"] == trigger_type\n                and log[\"status\"] is True\n                and log[\"success\"] is True\n                for log in logs\n            ), message\nE           AssertionError: No successful 'create infoAction proposal' log found\nE           assert False\nE            +  where False = any(<generator object assert_successful_log.<locals>.<genexpr> at 0x7f38560ac820>)\n\ntest_cases/test_agent_functions.py:6: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_cases.test_agent_functions.TestAgentFunctionExecution object at 0x7f3856839250>\nrun_admin_agent_fixture = <Response [200]>\nautonomous_agent_api = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f38568d6ba0>\n\n    @allure.sub_suite(\"MANUAL\")\n    @allure.title(\"Test Manual Info Action Proposal Logs\")\n    @allure.feature(\"Create Gov Info Action Function\")\n    def test_manual_info_action_proposal_logs(\n        self, run_admin_agent_fixture, autonomous_agent_api\n    ):\n        agent_id = run_admin_agent_fixture.json().get(\"id\")\n        logs = (\n            autonomous_agent_api.get_trigger_history(\n                param=f\"?agent_id={agent_id}&functionName={'createInfoGovAction'}\"\n            )\n            .json()\n            .get(\"items\")\n        )\n>       assert_successful_log(\n            logs,\n            function_name=\"createInfoGovAction\",\n            trigger_type=\"MANUAL\",\n            message=\"No successful 'create infoAction proposal' log found\",\n        )\n\ntest_cases/test_agent_functions.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nlogs = [{'agentId': '27bbe84b-c1b8-46ae-a9c0-ab83be52cd30', 'functionName': 'transferADA', 'instanceIndex': 0, 'internal': No...: 'https://metadata.cardanoapi.io/data/2129922f969072dfe2136b5e0d85008b7088f420139b6e4e1c0fd5584ff05751'}, ...}], ...}]\nfunction_name = 'createInfoGovAction', trigger_type = 'MANUAL'\nmessage = \"No successful 'create infoAction proposal' log found\"\n\n    def assert_successful_log(logs, function_name, trigger_type, message):\n        try:\n            assert any(\n                log[\"functionName\"] == function_name\n                and log[\"triggerType\"] == trigger_type\n                and log[\"status\"] is True\n                and log[\"success\"] is True\n                for log in logs\n            ), message\n        except AssertionError:\n            failed_logs = [log for log in logs if log[\"functionName\"] == function_name]\n    \n            if failed_logs:\n                allure.attach(\n                    str(failed_logs),\n                    name=\"Filtered Logs with Matching Function Name\",\n                    attachment_type=allure.attachment_type.JSON,\n                )\n            else:\n                allure.attach(\n                    \"No log found with the given parameters.\",\n                    name=\"No Matching Logs\",\n                    attachment_type=allure.attachment_type.TEXT,\n                )\n>           raise AssertionError(\n                f\"{message} | Failed Logs: {failed_logs if failed_logs else 'None'}\"\n            )\nE           AssertionError: No successful 'create infoAction proposal' log found | Failed Logs: [{'agentId': '27bbe84b-c1b8-46ae-a9c0-ab83be52cd30', 'functionName': 'createInfoGovAction', 'status': True, 'success': False, 'timestamp': '2024-10-29T07:20:28.844000+00:00', 'message': 'KubærApi [Status 400] : Missing Balance :[(AdaAssetId,400000)]', 'triggerType': 'MANUAL', 'txHash': None, 'instanceIndex': 0, 'parameters': [{'name': 'anchor', 'value': {'url': 'agents.cardanoapi.io', 'dataHash': '1111111111111111111111111111111111111111111111111111111111111111'}}], 'result': 'KubærApi [Status 400] : Missing Balance :[(AdaAssetId,400000)]', 'internal': [{'result': {'url': 'https://metadata.cardanoapi.io/data/2129922f969072dfe2136b5e0d85008b7088f420139b6e4e1c0fd5584ff05751', 'dataHash': '2129922f969072dfe2136b5e0d85008b7088f420139b6e4e1c0fd5584ff05751'}, 'message': '', 'success': True, 'timeStamp': '2024-10-29T07:20:28.784Z', 'parameters': ['{\"@context\":{\"@language\":\"en-us\",\"CIP100\":\"https://github.com/cardano-foundation/CIPs/blob/master/CIP-0100/README.md#\",\"CIP108\":\"https://github.com/cardano-foundation/CIPs/blob/master/CIP-0108/README.md#\",\"hashAlgorithm\":\"CIP100:hashAlgorithm\",\"body\":{\"@id\":\"CIP108:body\",\"@context\":{\"references\":{\"@id\":\"CIP108:references\",\"@container\":\"@set\",\"@context\":{\"GovernanceMetadata\":\"CIP100:GovernanceMetadataReference\",\"Other\":\"CIP100:OtherReference\",\"label\":\"CIP100:reference-label\",\"uri\":\"CIP100:reference-uri\",\"referenceHash\":{\"@id\":\"CIP108:referenceHash\",\"@context\":{\"hashDigest\":\"CIP108:hashDigest\",\"hashAlgorithm\":\"CIP100:hashAlgorithm\"}}}},\"title\":\"CIP108:title\",\"abstract\":\"CIP108:abstract\",\"motivation\":\"CIP108:motivation\",\"rationale\":\"CIP108:rationale\"}},\"authors\":{\"@id\":\"CIP100:authors\",\"@container\":\"@set\",\"@context\":{\"name\":\"http://xmlns.com/foaf/0.1/name\",\"witness\":{\"@id\":\"CIP100:witness\",\"@context\":{\"witnessAlgorithm\":\"CIP100:witnessAlgorithm\",\"publicKey\":\"CIP100:publicKey\",\"signature\":\"CIP100:signature\"}}}}},\"authors\":[],\"hashAlgorithm\":\"blake2b-256\",\"body\":{\"abstract\":\"This proposal is created automatically by agent: d4dceb32-34ee-4ae2-aa23-1993a900d604#0\",\"motivation\":\"This proposal is automatically generated by autonomous-agent-testing.\",\"references\":[{\"@type\":\"Other\",\"label\":\"autonomous-agent-testing\",\"uri\":\"https://cardanoapi.github.io/autonomous-agents/archietecture_docusaurus/docs/architecture\"}],\"title\":\"Proposal By Agent d4dceb32-34ee-4ae2-aa23-1993a900d604#0\",\"rationale\":\"This proposal was created as a part of testing for autonomous-agent-testing\"}}'], 'function_name': 'saveMetadata'}]}]\n\ntest_cases/test_agent_functions.py:28: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"autonomous_agent_api","time":{"start":1730186260565,"stop":1730186260565,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"admin_login_response","time":{"start":1730186263334,"stop":1730186263453,"duration":119},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"admin_login_cookie","time":{"start":1730186263453,"stop":1730186263453,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_template_fixture","time":{"start":1730186263453,"stop":1730186263575,"duration":122},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"edit_template_fixture","time":{"start":1730186263575,"stop":1730186263708,"duration":133},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_admin_agent_fixture","time":{"start":1730186263708,"stop":1730186263841,"duration":133},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"edit_admin_agent_fixture","time":{"start":1730186264022,"stop":1730186264210,"duration":188},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"admin_agent_fixture","time":{"start":1730186264212,"stop":1730186264399,"duration":187},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"load_funds_to_agent_address","time":{"start":1730186264400,"stop":1730186385371,"duration":120971},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"run_admin_agent_fixture","time":{"start":1730186385372,"stop":1730186747945,"duration":362573},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: No successful 'create infoAction proposal' log found | Failed Logs: [{'agentId': '27bbe84b-c1b8-46ae-a9c0-ab83be52cd30', 'functionName': 'createInfoGovAction', 'status': True, 'success': False, 'timestamp': '2024-10-29T07:20:28.844000+00:00', 'message': 'KubærApi [Status 400] : Missing Balance :[(AdaAssetId,400000)]', 'triggerType': 'MANUAL', 'txHash': None, 'instanceIndex': 0, 'parameters': [{'name': 'anchor', 'value': {'url': 'agents.cardanoapi.io', 'dataHash': '1111111111111111111111111111111111111111111111111111111111111111'}}], 'result': 'KubærApi [Status 400] : Missing Balance :[(AdaAssetId,400000)]', 'internal': [{'result': {'url': 'https://metadata.cardanoapi.io/data/2129922f969072dfe2136b5e0d85008b7088f420139b6e4e1c0fd5584ff05751', 'dataHash': '2129922f969072dfe2136b5e0d85008b7088f420139b6e4e1c0fd5584ff05751'}, 'message': '', 'success': True, 'timeStamp': '2024-10-29T07:20:28.784Z', 'parameters': ['{\"@context\":{\"@language\":\"en-us\",\"CIP100\":\"https://github.com/cardano-foundation/CIPs/blob/master/CIP-0100/README.md#\",\"CIP108\":\"https://github.com/cardano-foundation/CIPs/blob/master/CIP-0108/README.md#\",\"hashAlgorithm\":\"CIP100:hashAlgorithm\",\"body\":{\"@id\":\"CIP108:body\",\"@context\":{\"references\":{\"@id\":\"CIP108:references\",\"@container\":\"@set\",\"@context\":{\"GovernanceMetadata\":\"CIP100:GovernanceMetadataReference\",\"Other\":\"CIP100:OtherReference\",\"label\":\"CIP100:reference-label\",\"uri\":\"CIP100:reference-uri\",\"referenceHash\":{\"@id\":\"CIP108:referenceHash\",\"@context\":{\"hashDigest\":\"CIP108:hashDigest\",\"hashAlgorithm\":\"CIP100:hashAlgorithm\"}}}},\"title\":\"CIP108:title\",\"abstract\":\"CIP108:abstract\",\"motivation\":\"CIP108:motivation\",\"rationale\":\"CIP108:rationale\"}},\"authors\":{\"@id\":\"CIP100:authors\",\"@container\":\"@set\",\"@context\":{\"name\":\"http://xmlns.com/foaf/0.1/name\",\"witness\":{\"@id\":\"CIP100:witness\",\"@context\":{\"witnessAlgorithm\":\"CIP100:witnessAlgorithm\",\"publicKey\":\"CIP100:publicKey\",\"signature\":\"CIP100:signature\"}}}}},\"authors\":[],\"hashAlgorithm\":\"blake2b-256\",\"body\":{\"abstract\":\"This proposal is created automatically by agent: d4dceb32-34ee-4ae2-aa23-1993a900d604#0\",\"motivation\":\"This proposal is automatically generated by autonomous-agent-testing.\",\"references\":[{\"@type\":\"Other\",\"label\":\"autonomous-agent-testing\",\"uri\":\"https://cardanoapi.github.io/autonomous-agents/archietecture_docusaurus/docs/architecture\"}],\"title\":\"Proposal By Agent d4dceb32-34ee-4ae2-aa23-1993a900d604#0\",\"rationale\":\"This proposal was created as a part of testing for autonomous-agent-testing\"}}'], 'function_name': 'saveMetadata'}]}]","statusTrace":"logs = [{'agentId': '27bbe84b-c1b8-46ae-a9c0-ab83be52cd30', 'functionName': 'transferADA', 'instanceIndex': 0, 'internal': No...: 'https://metadata.cardanoapi.io/data/2129922f969072dfe2136b5e0d85008b7088f420139b6e4e1c0fd5584ff05751'}, ...}], ...}]\nfunction_name = 'createInfoGovAction', trigger_type = 'MANUAL'\nmessage = \"No successful 'create infoAction proposal' log found\"\n\n    def assert_successful_log(logs, function_name, trigger_type, message):\n        try:\n>           assert any(\n                log[\"functionName\"] == function_name\n                and log[\"triggerType\"] == trigger_type\n                and log[\"status\"] is True\n                and log[\"success\"] is True\n                for log in logs\n            ), message\nE           AssertionError: No successful 'create infoAction proposal' log found\nE           assert False\nE            +  where False = any(<generator object assert_successful_log.<locals>.<genexpr> at 0x7f38560ac820>)\n\ntest_cases/test_agent_functions.py:6: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_cases.test_agent_functions.TestAgentFunctionExecution object at 0x7f3856839250>\nrun_admin_agent_fixture = <Response [200]>\nautonomous_agent_api = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f38568d6ba0>\n\n    @allure.sub_suite(\"MANUAL\")\n    @allure.title(\"Test Manual Info Action Proposal Logs\")\n    @allure.feature(\"Create Gov Info Action Function\")\n    def test_manual_info_action_proposal_logs(\n        self, run_admin_agent_fixture, autonomous_agent_api\n    ):\n        agent_id = run_admin_agent_fixture.json().get(\"id\")\n        logs = (\n            autonomous_agent_api.get_trigger_history(\n                param=f\"?agent_id={agent_id}&functionName={'createInfoGovAction'}\"\n            )\n            .json()\n            .get(\"items\")\n        )\n>       assert_successful_log(\n            logs,\n            function_name=\"createInfoGovAction\",\n            trigger_type=\"MANUAL\",\n            message=\"No successful 'create infoAction proposal' log found\",\n        )\n\ntest_cases/test_agent_functions.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nlogs = [{'agentId': '27bbe84b-c1b8-46ae-a9c0-ab83be52cd30', 'functionName': 'transferADA', 'instanceIndex': 0, 'internal': No...: 'https://metadata.cardanoapi.io/data/2129922f969072dfe2136b5e0d85008b7088f420139b6e4e1c0fd5584ff05751'}, ...}], ...}]\nfunction_name = 'createInfoGovAction', trigger_type = 'MANUAL'\nmessage = \"No successful 'create infoAction proposal' log found\"\n\n    def assert_successful_log(logs, function_name, trigger_type, message):\n        try:\n            assert any(\n                log[\"functionName\"] == function_name\n                and log[\"triggerType\"] == trigger_type\n                and log[\"status\"] is True\n                and log[\"success\"] is True\n                for log in logs\n            ), message\n        except AssertionError:\n            failed_logs = [log for log in logs if log[\"functionName\"] == function_name]\n    \n            if failed_logs:\n                allure.attach(\n                    str(failed_logs),\n                    name=\"Filtered Logs with Matching Function Name\",\n                    attachment_type=allure.attachment_type.JSON,\n                )\n            else:\n                allure.attach(\n                    \"No log found with the given parameters.\",\n                    name=\"No Matching Logs\",\n                    attachment_type=allure.attachment_type.TEXT,\n                )\n>           raise AssertionError(\n                f\"{message} | Failed Logs: {failed_logs if failed_logs else 'None'}\"\n            )\nE           AssertionError: No successful 'create infoAction proposal' log found | Failed Logs: [{'agentId': '27bbe84b-c1b8-46ae-a9c0-ab83be52cd30', 'functionName': 'createInfoGovAction', 'status': True, 'success': False, 'timestamp': '2024-10-29T07:20:28.844000+00:00', 'message': 'KubærApi [Status 400] : Missing Balance :[(AdaAssetId,400000)]', 'triggerType': 'MANUAL', 'txHash': None, 'instanceIndex': 0, 'parameters': [{'name': 'anchor', 'value': {'url': 'agents.cardanoapi.io', 'dataHash': '1111111111111111111111111111111111111111111111111111111111111111'}}], 'result': 'KubærApi [Status 400] : Missing Balance :[(AdaAssetId,400000)]', 'internal': [{'result': {'url': 'https://metadata.cardanoapi.io/data/2129922f969072dfe2136b5e0d85008b7088f420139b6e4e1c0fd5584ff05751', 'dataHash': '2129922f969072dfe2136b5e0d85008b7088f420139b6e4e1c0fd5584ff05751'}, 'message': '', 'success': True, 'timeStamp': '2024-10-29T07:20:28.784Z', 'parameters': ['{\"@context\":{\"@language\":\"en-us\",\"CIP100\":\"https://github.com/cardano-foundation/CIPs/blob/master/CIP-0100/README.md#\",\"CIP108\":\"https://github.com/cardano-foundation/CIPs/blob/master/CIP-0108/README.md#\",\"hashAlgorithm\":\"CIP100:hashAlgorithm\",\"body\":{\"@id\":\"CIP108:body\",\"@context\":{\"references\":{\"@id\":\"CIP108:references\",\"@container\":\"@set\",\"@context\":{\"GovernanceMetadata\":\"CIP100:GovernanceMetadataReference\",\"Other\":\"CIP100:OtherReference\",\"label\":\"CIP100:reference-label\",\"uri\":\"CIP100:reference-uri\",\"referenceHash\":{\"@id\":\"CIP108:referenceHash\",\"@context\":{\"hashDigest\":\"CIP108:hashDigest\",\"hashAlgorithm\":\"CIP100:hashAlgorithm\"}}}},\"title\":\"CIP108:title\",\"abstract\":\"CIP108:abstract\",\"motivation\":\"CIP108:motivation\",\"rationale\":\"CIP108:rationale\"}},\"authors\":{\"@id\":\"CIP100:authors\",\"@container\":\"@set\",\"@context\":{\"name\":\"http://xmlns.com/foaf/0.1/name\",\"witness\":{\"@id\":\"CIP100:witness\",\"@context\":{\"witnessAlgorithm\":\"CIP100:witnessAlgorithm\",\"publicKey\":\"CIP100:publicKey\",\"signature\":\"CIP100:signature\"}}}}},\"authors\":[],\"hashAlgorithm\":\"blake2b-256\",\"body\":{\"abstract\":\"This proposal is created automatically by agent: d4dceb32-34ee-4ae2-aa23-1993a900d604#0\",\"motivation\":\"This proposal is automatically generated by autonomous-agent-testing.\",\"references\":[{\"@type\":\"Other\",\"label\":\"autonomous-agent-testing\",\"uri\":\"https://cardanoapi.github.io/autonomous-agents/archietecture_docusaurus/docs/architecture\"}],\"title\":\"Proposal By Agent d4dceb32-34ee-4ae2-aa23-1993a900d604#0\",\"rationale\":\"This proposal was created as a part of testing for autonomous-agent-testing\"}}'], 'function_name': 'saveMetadata'}]}]\n\ntest_cases/test_agent_functions.py:28: AssertionError","steps":[],"attachments":[{"uid":"d7c52438947c5b5b","name":"Filtered Logs with Matching Function Name","source":"d7c52438947c5b5b.json","type":"application/json","size":2479}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"autonomous_agent_api::0","time":{"start":1730186750271,"stop":1730186750271,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Create Gov Info Action Function"},{"name":"parentSuite","value":"Agent Function Execution"},{"name":"subSuite","value":"MANUAL"},{"name":"suite","value":"test_agent_functions"},{"name":"host","value":"fv-az1499-278"},{"name":"thread","value":"1913-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_agent_functions"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":30,"broken":17,"skipped":0,"passed":26,"unknown":0,"total":73},"items":[{"uid":"dba51fbd6fe97913","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/71//#testresult/dba51fbd6fe97913","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729748684736,"stop":1729748684736,"duration":0}},{"uid":"3ff590e180f02031","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/70//#testresult/3ff590e180f02031","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729680163224,"stop":1729680163224,"duration":0}},{"uid":"b2e5b8fcade97f2f","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/69//#testresult/b2e5b8fcade97f2f","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729679365726,"stop":1729679365726,"duration":0}},{"uid":"66fbc48faa06d6f1","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/68//#testresult/66fbc48faa06d6f1","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729672197485,"stop":1729672197485,"duration":0}},{"uid":"e8b422e4e94d1fb5","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/67//#testresult/e8b422e4e94d1fb5","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729667682497,"stop":1729667682497,"duration":0}},{"uid":"d9670ffd0ac601f0","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/66//#testresult/d9670ffd0ac601f0","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729664171895,"stop":1729664171895,"duration":0}},{"uid":"c7c6c981e84fd7c2","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/65//#testresult/c7c6c981e84fd7c2","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729574248244,"stop":1729574248244,"duration":0}},{"uid":"b1b5376ea4b774cc","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/64//#testresult/b1b5376ea4b774cc","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729508364537,"stop":1729508364537,"duration":0}},{"uid":"6b9f0df71e83a0c5","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/63//#testresult/6b9f0df71e83a0c5","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729506658825,"stop":1729506658825,"duration":0}},{"uid":"ed9405a7795d80bf","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/62//#testresult/ed9405a7795d80bf","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1729245928989,"stop":1729245928989,"duration":0}},{"uid":"f916081f991d590c","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/61//#testresult/f916081f991d590c","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1728386491751,"stop":1728386491751,"duration":0}},{"uid":"86944b89ce30adde","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/60//#testresult/86944b89ce30adde","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1728380137649,"stop":1728380137649,"duration":0}},{"uid":"4f5bab4501b4751a","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/59//#testresult/4f5bab4501b4751a","status":"broken","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='api.agents.cardanoapi.io', port=443): Max retries exceeded with url: /api/auth/login (Caused by SSLError(SSLCertVerificationError(1, \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'api.agents.cardanoapi.io'. (_ssl.c:1000)\")))","time":{"start":1728370091844,"stop":1728370091844,"duration":0}},{"uid":"51963c4b04d56d0c","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/58//#testresult/51963c4b04d56d0c","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728362223852,"stop":1728362223852,"duration":0}},{"uid":"544208495fb4339c","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/57//#testresult/544208495fb4339c","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728055093166,"stop":1728055093166,"duration":0}},{"uid":"41023f12c5ebfe05","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/56//#testresult/41023f12c5ebfe05","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728054163846,"stop":1728054163846,"duration":0}},{"uid":"5a8a8dace0b8ea23","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/55//#testresult/5a8a8dace0b8ea23","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728031538231,"stop":1728031538231,"duration":0}},{"uid":"6565cb8a1c125d55","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/54//#testresult/6565cb8a1c125d55","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728022312801,"stop":1728022312801,"duration":0}},{"uid":"5e5a3bb176383e18","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/53//#testresult/5e5a3bb176383e18","status":"broken","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))","time":{"start":1728020022928,"stop":1728020022928,"duration":0}},{"uid":"aa666d4f6e591b35","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/52//#testresult/aa666d4f6e591b35","status":"broken","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))","time":{"start":1728019911036,"stop":1728019911036,"duration":0}}]},"tags":[]},"source":"569d78392c9becd0.json","parameterValues":[]}