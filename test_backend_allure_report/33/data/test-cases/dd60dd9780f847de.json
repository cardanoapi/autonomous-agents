{"uid":"dd60dd9780f847de","name":"Test Template Create","fullName":"test_cases.test_template.TestTemplateManagement#test_template_create","historyId":"e60a8efb6389f125260a50658880d0d3","time":{"start":1726811572025,"stop":1726811572025,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected POST /templates to succeed but got statusCode: 403 : body: \"Forbidden Request\"","statusTrace":"autonomous_agent_api = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f3bd81c2330>\nadmin_login_cookie = 'access_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2FkZHJlc3MiOiIxYjkxZjA4MDBjZTg2M2FiYzJiM2NjODUzMjFkMmM4ZDU...rYOu4; Domain=api.agents.cardanoapi.io; expires=Sat, 05 Oct 2024 05:52:51 GMT; HttpOnly; Path=/; SameSite=None; Secure'\n\n    @pytest.fixture(scope=\"session\")\n    def create_template_fixture(autonomous_agent_api, admin_login_cookie):\n        \"\"\"Fixture to create a new template.\"\"\"\n        template_name = str(uuid.uuid4())\n        template_description = \"Template Generated using Integration Test\"\n        template_triggers = []  # Define any necessary triggers here\n    \n        # Create template data\n        template_data = TemplateCreateDto(\n            name=template_name,\n            description=template_description,\n            template_triggers=template_triggers,\n        ).model_dump()\n    \n        # Create template via API\n>       response = autonomous_agent_api.create_template(\n            headers={\"Cookie\": admin_login_cookie}, body=template_data\n        )\n\ntest_cases/fixtures/template.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/autonomous_agent_api.py:128: in create_template\n    return self._post(\"/templates\", headers=headers, body=body)\nlib/autonomous_agent_api.py:80: in _post\n    return self._request(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f3bd81c2330>\nmethod = 'POST', endpoint = '/templates', param = None\nbody = {'description': 'Template Generated using Integration Test', 'name': 'a7c9fdbc-5e7b-4a8e-9ec2-fed15bec32b5', 'template_triggers': [], 'userAddress': None}\nheaders = {'Cookie': 'access_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2FkZHJlc3MiOiIxYjkxZjA4MDBjZTg2M2FiYzJiM2NjODUz...YOu4; Domain=api.agents.cardanoapi.io; expires=Sat, 05 Oct 2024 05:52:51 GMT; HttpOnly; Path=/; SameSite=None; Secure'}\n\n    def _request(\n        self,\n        method: str,\n        endpoint: str,\n        param: Any | None = None,\n        body: Any | None = None,\n        headers: dict | None = None,\n    ) -> Response:\n        endpoint = endpoint if endpoint.startswith(\"/\") else f\"/{endpoint}\"\n        full_url = self._base_url + endpoint\n        full_url_with_parms = full_url + param if param else full_url\n    \n        response = self._session.request(\n            method=method, url=full_url_with_parms, json=body, headers=headers\n        )\n    \n        try:\n            response_json = response.json()\n            response_json_str = json.dumps(response_json)[:200]\n        except:\n            response_json_str = \"Response not as Expected. Something is Wrong\"\n    \n        request_info = {\n            \"method\": method,\n            \"endpoint\": endpoint,\n            \"path_param\": param,\n            \"json\": json.dumps(body),\n            \"status_code\": response.status_code,\n            \"response_json\": response_json_str,\n        }\n    \n        self.requests_log.append(request_info)\n    \n>       assert (\n            200 <= response.status_code <= 299\n        ), f\"Expected {method} {endpoint} to succeed but got statusCode: {response.status_code} : body: {response.text}\"\nE       AssertionError: Expected POST /templates to succeed but got statusCode: 403 : body: \"Forbidden Request\"\n\nlib/autonomous_agent_api.py:49: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"autonomous_agent_api","time":{"start":1726811570694,"stop":1726811570694,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"admin_login_response","time":{"start":1726811571302,"stop":1726811571432,"duration":130},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"admin_login_cookie","time":{"start":1726811571432,"stop":1726811571432,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_template_fixture","time":{"start":1726811571432,"stop":1726811571556,"duration":124},"status":"failed","statusMessage":"AssertionError: Expected POST /templates to succeed but got statusCode: 403 : body: \"Forbidden Request\"\n","statusTrace":"  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1139, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 897, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/test_cases/fixtures/template.py\", line 24, in create_template_fixture\n    response = autonomous_agent_api.create_template(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 128, in create_template\n    return self._post(\"/templates\", headers=headers, body=body)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 80, in _post\n    return self._request(\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 49, in _request\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"autonomous_agent_api::0","time":{"start":1726811572222,"stop":1726811572222,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Template Create"},{"name":"parentSuite","value":"Template Management"},{"name":"suite","value":"test_template"},{"name":"subSuite","value":"TestTemplateManagement"},{"name":"host","value":"fv-az775-518"},{"name":"thread","value":"1932-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_template"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":29,"unknown":0,"total":32},"items":[{"uid":"5b53f057b42af449","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/32//#testresult/5b53f057b42af449","status":"failed","statusDetails":"AssertionError: Expected POST /templates to succeed but got statusCode: 403 : body: \"Forbidden Request\"","time":{"start":1726738988160,"stop":1726738988160,"duration":0}},{"uid":"107edb0e503773e4","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/31//#testresult/107edb0e503773e4","status":"failed","statusDetails":"AssertionError: Expected POST /templates to succeed but got statusCode: 403 : body: \"Forbidden Request\"","time":{"start":1726730683196,"stop":1726730683196,"duration":0}},{"uid":"acede39165b8b832","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/30//#testresult/acede39165b8b832","status":"passed","time":{"start":1726730664541,"stop":1726730664541,"duration":0}},{"uid":"c37efb6cc093c0f","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/29//#testresult/c37efb6cc093c0f","status":"passed","time":{"start":1726655638928,"stop":1726655638928,"duration":0}},{"uid":"891cb3a94ea9a67f","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/28//#testresult/891cb3a94ea9a67f","status":"passed","time":{"start":1726572395169,"stop":1726572395169,"duration":0}},{"uid":"d81649b9c0e7ebc","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/27//#testresult/d81649b9c0e7ebc","status":"passed","time":{"start":1726571194393,"stop":1726571194393,"duration":0}},{"uid":"cebe71a003d36719","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/26//#testresult/cebe71a003d36719","status":"passed","time":{"start":1726555654129,"stop":1726555654129,"duration":0}},{"uid":"268105abe2e8fa7c","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/25//#testresult/268105abe2e8fa7c","status":"passed","time":{"start":1726554685012,"stop":1726554685013,"duration":1}},{"uid":"164151396af686ac","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/24//#testresult/164151396af686ac","status":"passed","time":{"start":1726552150861,"stop":1726552150861,"duration":0}},{"uid":"9ffef511ad2386f0","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/23//#testresult/9ffef511ad2386f0","status":"passed","time":{"start":1726475581090,"stop":1726475581090,"duration":0}},{"uid":"a50cbe1f5d8f304c","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/22//#testresult/a50cbe1f5d8f304c","status":"passed","time":{"start":1726461466743,"stop":1726461466743,"duration":0}},{"uid":"87c492e9e7f3c11e","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/19//#testresult/87c492e9e7f3c11e","status":"passed","time":{"start":1726056110797,"stop":1726056110797,"duration":0}},{"uid":"8e01ffbe3fa94414","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/18//#testresult/8e01ffbe3fa94414","status":"passed","time":{"start":1726051675039,"stop":1726051675039,"duration":0}},{"uid":"fd55a53d392ebe3c","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/17//#testresult/fd55a53d392ebe3c","status":"passed","time":{"start":1726047884847,"stop":1726047884847,"duration":0}},{"uid":"73071510b9a6cd4e","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/16//#testresult/73071510b9a6cd4e","status":"passed","time":{"start":1726037916089,"stop":1726037916089,"duration":0}},{"uid":"ffa1574fa780cd11","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/15//#testresult/ffa1574fa780cd11","status":"passed","time":{"start":1726031420364,"stop":1726031420364,"duration":0}},{"uid":"e67e5d7779ce3c1b","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/14//#testresult/e67e5d7779ce3c1b","status":"passed","time":{"start":1725963148176,"stop":1725963148176,"duration":0}},{"uid":"c33ff21f3a7be5d3","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/13//#testresult/c33ff21f3a7be5d3","status":"passed","time":{"start":1725950967445,"stop":1725950967445,"duration":0}},{"uid":"4c8ba1f4712a346d","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/12//#testresult/4c8ba1f4712a346d","status":"passed","time":{"start":1725869819223,"stop":1725869819223,"duration":0}},{"uid":"c25b060a3a7cb668","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/11//#testresult/c25b060a3a7cb668","status":"passed","time":{"start":1725616133547,"stop":1725616133547,"duration":0}}]},"tags":[]},"source":"dd60dd9780f847de.json","parameterValues":[]}