{"uid":"8fbd096da728fdc7","name":"Test Get Admin Agent","fullName":"test_cases.test_agent.TestAgentManagement#test_get_agent","historyId":"06580cb02b339767857019902ae34541","time":{"start":1726811571302,"stop":1726811571302,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected POST /templates to succeed but got statusCode: 403 : body: \"Forbidden Request\"","statusTrace":"autonomous_agent_api = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f3bd81c2330>\nadmin_login_cookie = 'access_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2FkZHJlc3MiOiIxYjkxZjA4MDBjZTg2M2FiYzJiM2NjODUzMjFkMmM4ZDU...rYOu4; Domain=api.agents.cardanoapi.io; expires=Sat, 05 Oct 2024 05:52:51 GMT; HttpOnly; Path=/; SameSite=None; Secure'\n\n    @pytest.fixture(scope=\"session\")\n    def create_template_fixture(autonomous_agent_api, admin_login_cookie):\n        \"\"\"Fixture to create a new template.\"\"\"\n        template_name = str(uuid.uuid4())\n        template_description = \"Template Generated using Integration Test\"\n        template_triggers = []  # Define any necessary triggers here\n    \n        # Create template data\n        template_data = TemplateCreateDto(\n            name=template_name,\n            description=template_description,\n            template_triggers=template_triggers,\n        ).model_dump()\n    \n        # Create template via API\n>       response = autonomous_agent_api.create_template(\n            headers={\"Cookie\": admin_login_cookie}, body=template_data\n        )\n\ntest_cases/fixtures/template.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/autonomous_agent_api.py:128: in create_template\n    return self._post(\"/templates\", headers=headers, body=body)\nlib/autonomous_agent_api.py:80: in _post\n    return self._request(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7f3bd81c2330>\nmethod = 'POST', endpoint = '/templates', param = None\nbody = {'description': 'Template Generated using Integration Test', 'name': 'a7c9fdbc-5e7b-4a8e-9ec2-fed15bec32b5', 'template_triggers': [], 'userAddress': None}\nheaders = {'Cookie': 'access_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2FkZHJlc3MiOiIxYjkxZjA4MDBjZTg2M2FiYzJiM2NjODUz...YOu4; Domain=api.agents.cardanoapi.io; expires=Sat, 05 Oct 2024 05:52:51 GMT; HttpOnly; Path=/; SameSite=None; Secure'}\n\n    def _request(\n        self,\n        method: str,\n        endpoint: str,\n        param: Any | None = None,\n        body: Any | None = None,\n        headers: dict | None = None,\n    ) -> Response:\n        endpoint = endpoint if endpoint.startswith(\"/\") else f\"/{endpoint}\"\n        full_url = self._base_url + endpoint\n        full_url_with_parms = full_url + param if param else full_url\n    \n        response = self._session.request(\n            method=method, url=full_url_with_parms, json=body, headers=headers\n        )\n    \n        try:\n            response_json = response.json()\n            response_json_str = json.dumps(response_json)[:200]\n        except:\n            response_json_str = \"Response not as Expected. Something is Wrong\"\n    \n        request_info = {\n            \"method\": method,\n            \"endpoint\": endpoint,\n            \"path_param\": param,\n            \"json\": json.dumps(body),\n            \"status_code\": response.status_code,\n            \"response_json\": response_json_str,\n        }\n    \n        self.requests_log.append(request_info)\n    \n>       assert (\n            200 <= response.status_code <= 299\n        ), f\"Expected {method} {endpoint} to succeed but got statusCode: {response.status_code} : body: {response.text}\"\nE       AssertionError: Expected POST /templates to succeed but got statusCode: 403 : body: \"Forbidden Request\"\n\nlib/autonomous_agent_api.py:49: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"autonomous_agent_api","time":{"start":1726811570694,"stop":1726811570694,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"admin_login_response","time":{"start":1726811571302,"stop":1726811571432,"duration":130},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"admin_login_cookie","time":{"start":1726811571432,"stop":1726811571432,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_template_fixture","time":{"start":1726811571432,"stop":1726811571556,"duration":124},"status":"failed","statusMessage":"AssertionError: Expected POST /templates to succeed but got statusCode: 403 : body: \"Forbidden Request\"\n","statusTrace":"  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1139, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 897, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/test_cases/fixtures/template.py\", line 24, in create_template_fixture\n    response = autonomous_agent_api.create_template(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 128, in create_template\n    return self._post(\"/templates\", headers=headers, body=body)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 80, in _post\n    return self._request(\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 49, in _request\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"autonomous_agent_api::0","time":{"start":1726811572222,"stop":1726811572222,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Get Admin Agent"},{"name":"parentSuite","value":"Agent Management"},{"name":"suite","value":"test_agent"},{"name":"subSuite","value":"TestAgentManagement"},{"name":"host","value":"fv-az775-518"},{"name":"thread","value":"1932-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_agent"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":29,"unknown":0,"total":32},"items":[{"uid":"f7da25bd7c82f732","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/32//#testresult/f7da25bd7c82f732","status":"failed","statusDetails":"AssertionError: Expected POST /templates to succeed but got statusCode: 403 : body: \"Forbidden Request\"","time":{"start":1726738987446,"stop":1726738987446,"duration":0}},{"uid":"44a82aa27eec6351","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/31//#testresult/44a82aa27eec6351","status":"failed","statusDetails":"AssertionError: Expected POST /templates to succeed but got statusCode: 403 : body: \"Forbidden Request\"","time":{"start":1726730682178,"stop":1726730682178,"duration":0}},{"uid":"698a7fa34fe547f2","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/30//#testresult/698a7fa34fe547f2","status":"passed","time":{"start":1726730178615,"stop":1726730178938,"duration":323}},{"uid":"19732cbe9cad6d5f","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/29//#testresult/19732cbe9cad6d5f","status":"passed","time":{"start":1726655152991,"stop":1726655153327,"duration":336}},{"uid":"fca9c0f550a362eb","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/28//#testresult/fca9c0f550a362eb","status":"passed","time":{"start":1726571908367,"stop":1726571908736,"duration":369}},{"uid":"fe43614aa904265c","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/27//#testresult/fe43614aa904265c","status":"passed","time":{"start":1726570708256,"stop":1726570708607,"duration":351}},{"uid":"d05bbaf56fbb1afe","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/26//#testresult/d05bbaf56fbb1afe","status":"passed","time":{"start":1726555168195,"stop":1726555168532,"duration":337}},{"uid":"cf7096139a49c034","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/25//#testresult/cf7096139a49c034","status":"passed","time":{"start":1726554197488,"stop":1726554197884,"duration":396}},{"uid":"f2319149493f06fc","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/24//#testresult/f2319149493f06fc","status":"passed","time":{"start":1726551663856,"stop":1726551664249,"duration":393}},{"uid":"8adbb17bd30fb965","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/23//#testresult/8adbb17bd30fb965","status":"passed","time":{"start":1726475093641,"stop":1726475094058,"duration":417}},{"uid":"a705e5399bed053a","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/22//#testresult/a705e5399bed053a","status":"passed","time":{"start":1726460969569,"stop":1726460969900,"duration":331}},{"uid":"a5b8285c1198b538","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/19//#testresult/a5b8285c1198b538","status":"passed","time":{"start":1726056109810,"stop":1726056110128,"duration":318}},{"uid":"e046da67ab130e32","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/18//#testresult/e046da67ab130e32","status":"passed","time":{"start":1726051674039,"stop":1726051674383,"duration":344}},{"uid":"dffa4566fcda1648","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/17//#testresult/dffa4566fcda1648","status":"passed","time":{"start":1726047883777,"stop":1726047884151,"duration":374}},{"uid":"10f29bfa212887d8","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/16//#testresult/10f29bfa212887d8","status":"passed","time":{"start":1726037915051,"stop":1726037915416,"duration":365}},{"uid":"66a0fd82bb2c00ab","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/15//#testresult/66a0fd82bb2c00ab","status":"passed","time":{"start":1726031419383,"stop":1726031419754,"duration":371}},{"uid":"5d56b1e1a9e82a8f","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/14//#testresult/5d56b1e1a9e82a8f","status":"passed","time":{"start":1725963146919,"stop":1725963147301,"duration":382}},{"uid":"8533b8070e7b68d1","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/13//#testresult/8533b8070e7b68d1","status":"passed","time":{"start":1725950706152,"stop":1725950706541,"duration":389}},{"uid":"8b2d5d5a0ab01a06","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/12//#testresult/8b2d5d5a0ab01a06","status":"passed","time":{"start":1725869557904,"stop":1725869558271,"duration":367}},{"uid":"7bcb3e51ec0b4a15","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/11//#testresult/7bcb3e51ec0b4a15","status":"passed","time":{"start":1725615872537,"stop":1725615872956,"duration":419}}]},"tags":[]},"source":"8fbd096da728fdc7.json","parameterValues":[]}