{"uid":"26974eb38f9eced1","name":"Test Template Edit","fullName":"test_cases.test_template.TestTemplateManagement#test_template_edit","historyId":"d79a2535db45bda6b7c50f297d55cad0","time":{"start":1726730683443,"stop":1726730683443,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected POST /templates to succeed but got statusCode: 403 : body: \"Forbidden Request\"","statusTrace":"autonomous_agent_api = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7fc6d6e9a330>\nadmin_login_cookie = 'access_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2FkZHJlc3MiOiIxYjkxZjA4MDBjZTg2M2FiYzJiM2NjODUzMjFkMmM4ZDU...rYOu4; Domain=api.agents.cardanoapi.io; expires=Fri, 04 Oct 2024 07:24:42 GMT; HttpOnly; Path=/; SameSite=None; Secure'\n\n    @pytest.fixture(scope=\"session\")\n    def create_template_fixture(autonomous_agent_api, admin_login_cookie):\n        \"\"\"Fixture to create a new template.\"\"\"\n        template_name = str(uuid.uuid4())\n        template_description = \"Template Generated using Integration Test\"\n        template_triggers = []  # Define any necessary triggers here\n    \n        # Create template data\n        template_data = TemplateCreateDto(\n            name=template_name,\n            description=template_description,\n            template_triggers=template_triggers,\n        ).model_dump()\n    \n        # Create template via API\n>       response = autonomous_agent_api.create_template(\n            headers={\"Cookie\": admin_login_cookie}, body=template_data\n        )\n\ntest_cases/fixtures/template.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/autonomous_agent_api.py:128: in create_template\n    return self._post(\"/templates\", headers=headers, body=body)\nlib/autonomous_agent_api.py:80: in _post\n    return self._request(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7fc6d6e9a330>\nmethod = 'POST', endpoint = '/templates', param = None\nbody = {'description': 'Template Generated using Integration Test', 'name': '7b6cc17b-aac2-4765-9c85-612dfb96cb45', 'template_triggers': [], 'userAddress': None}\nheaders = {'Cookie': 'access_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2FkZHJlc3MiOiIxYjkxZjA4MDBjZTg2M2FiYzJiM2NjODUz...YOu4; Domain=api.agents.cardanoapi.io; expires=Fri, 04 Oct 2024 07:24:42 GMT; HttpOnly; Path=/; SameSite=None; Secure'}\n\n    def _request(\n        self,\n        method: str,\n        endpoint: str,\n        param: Any | None = None,\n        body: Any | None = None,\n        headers: dict | None = None,\n    ) -> Response:\n        endpoint = endpoint if endpoint.startswith(\"/\") else f\"/{endpoint}\"\n        full_url = self._base_url + endpoint\n        full_url_with_parms = full_url + param if param else full_url\n    \n        response = self._session.request(\n            method=method, url=full_url_with_parms, json=body, headers=headers\n        )\n    \n        try:\n            response_json = response.json()\n            response_json_str = json.dumps(response_json)[:200]\n        except:\n            response_json_str = \"Response not as Expected. Something is Wrong\"\n    \n        request_info = {\n            \"method\": method,\n            \"endpoint\": endpoint,\n            \"path_param\": param,\n            \"json\": json.dumps(body),\n            \"status_code\": response.status_code,\n            \"response_json\": response_json_str,\n        }\n    \n        self.requests_log.append(request_info)\n    \n>       assert (\n            200 <= response.status_code <= 299\n        ), f\"Expected {method} {endpoint} to succeed but got statusCode: {response.status_code} : body: {response.text}\"\nE       AssertionError: Expected POST /templates to succeed but got statusCode: 403 : body: \"Forbidden Request\"\n\nlib/autonomous_agent_api.py:49: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"autonomous_agent_api","time":{"start":1726730681483,"stop":1726730681484,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"admin_login_response","time":{"start":1726730682179,"stop":1726730682364,"duration":185},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_template_fixture","time":{"start":1726730682364,"stop":1726730682547,"duration":183},"status":"failed","statusMessage":"AssertionError: Expected POST /templates to succeed but got statusCode: 403 : body: \"Forbidden Request\"\n","statusTrace":"  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1139, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 897, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/test_cases/fixtures/template.py\", line 24, in create_template_fixture\n    response = autonomous_agent_api.create_template(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 128, in create_template\n    return self._post(\"/templates\", headers=headers, body=body)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 80, in _post\n    return self._request(\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 49, in _request\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"admin_login_cookie","time":{"start":1726730682364,"stop":1726730682364,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"autonomous_agent_api::0","time":{"start":1726730683468,"stop":1726730683468,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Template Edit"},{"name":"parentSuite","value":"Template Management"},{"name":"suite","value":"test_template"},{"name":"subSuite","value":"TestTemplateManagement"},{"name":"host","value":"fv-az525-740"},{"name":"thread","value":"1892-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_template"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":29,"unknown":0,"total":30},"items":[{"uid":"9054698fc351c171","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/30//#testresult/9054698fc351c171","status":"passed","time":{"start":1726730664824,"stop":1726730664824,"duration":0}},{"uid":"34960c8db77799ae","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/29//#testresult/34960c8db77799ae","status":"passed","time":{"start":1726655639225,"stop":1726655639226,"duration":1}},{"uid":"6ccd2bab97193ecf","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/28//#testresult/6ccd2bab97193ecf","status":"passed","time":{"start":1726572395574,"stop":1726572395574,"duration":0}},{"uid":"b26d5db71b5eead8","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/27//#testresult/b26d5db71b5eead8","status":"passed","time":{"start":1726571194708,"stop":1726571194708,"duration":0}},{"uid":"82fea142705e82ce","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/26//#testresult/82fea142705e82ce","status":"passed","time":{"start":1726555654439,"stop":1726555654440,"duration":1}},{"uid":"d0c3191963225043","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/25//#testresult/d0c3191963225043","status":"passed","time":{"start":1726554685407,"stop":1726554685407,"duration":0}},{"uid":"4ef9268b56f322f2","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/24//#testresult/4ef9268b56f322f2","status":"passed","time":{"start":1726552151258,"stop":1726552151258,"duration":0}},{"uid":"827416a1d0cf6806","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/23//#testresult/827416a1d0cf6806","status":"passed","time":{"start":1726475581489,"stop":1726475581489,"duration":0}},{"uid":"28734ffffdf3ce52","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/22//#testresult/28734ffffdf3ce52","status":"passed","time":{"start":1726461467021,"stop":1726461467021,"duration":0}},{"uid":"d53171d64e4440a","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/19//#testresult/d53171d64e4440a","status":"passed","time":{"start":1726056111099,"stop":1726056111099,"duration":0}},{"uid":"11356dff2ea898e1","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/18//#testresult/11356dff2ea898e1","status":"passed","time":{"start":1726051675330,"stop":1726051675330,"duration":0}},{"uid":"4f2af32d2b6094aa","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/17//#testresult/4f2af32d2b6094aa","status":"passed","time":{"start":1726047885135,"stop":1726047885135,"duration":0}},{"uid":"b9d6a5fafa4752d7","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/16//#testresult/b9d6a5fafa4752d7","status":"passed","time":{"start":1726037916391,"stop":1726037916391,"duration":0}},{"uid":"197bdb941f8083d1","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/15//#testresult/197bdb941f8083d1","status":"passed","time":{"start":1726031420640,"stop":1726031420640,"duration":0}},{"uid":"5fc63b59d76c4347","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/14//#testresult/5fc63b59d76c4347","status":"passed","time":{"start":1725963148567,"stop":1725963148568,"duration":1}},{"uid":"6be21a3c92f2dc32","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/13//#testresult/6be21a3c92f2dc32","status":"passed","time":{"start":1725950967761,"stop":1725950967761,"duration":0}},{"uid":"1cbf404e5794c3a0","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/12//#testresult/1cbf404e5794c3a0","status":"passed","time":{"start":1725869819496,"stop":1725869819496,"duration":0}},{"uid":"bcdeefea36f22487","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/11//#testresult/bcdeefea36f22487","status":"passed","time":{"start":1725616133846,"stop":1725616133846,"duration":0}},{"uid":"abde0ae99259408b","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/10//#testresult/abde0ae99259408b","status":"passed","time":{"start":1725615365015,"stop":1725615365015,"duration":0}},{"uid":"31b3915244a119cc","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/9//#testresult/31b3915244a119cc","status":"passed","time":{"start":1725615333487,"stop":1725615333488,"duration":1}}]},"tags":[]},"source":"26974eb38f9eced1.json","parameterValues":[]}