{"uid":"6ff2ae4cc5ce00f2","name":"Test User Logout","fullName":"test_cases.test_auth.TestUserAuthentication#test_logout_user","historyId":"8f66ed3039064d88cfc2340a1bec5701","time":{"start":1728031538382,"stop":1728031538382,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","statusTrace":"autonomous_agent_api = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7fe291976a20>\n\n    @pytest.fixture(scope=\"session\")\n    def user_login_response(autonomous_agent_api):\n>       return autonomous_agent_api.login_user(body=user_signed_data.model_dump())\n\ntest_cases/fixtures/auth.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/autonomous_agent_api.py:148: in login_user\n    return self._post(\"/auth/login\", body=body)\nlib/autonomous_agent_api.py:80: in _post\n    return self._request(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lib.autonomous_agent_api.AutonomousAgentApi object at 0x7fe291976a20>\nmethod = 'POST', endpoint = '/auth/login', param = None\nbody = {'key': 'a5010102581de06d31162c8b37ec443bd42c4707a8fc3f0a1d2fa9aeee54bdff7341ba03272006215820bce6019d4f121b928a4ebb5c1...b60a02987a919cf972e669cbfa1d7a08059e56d4c159f786bd798807dff4af23db6f4e2107dbb8f88365b5eee676bcefdfcf4db63a2f904471403'}\nheaders = None\n\n    def _request(\n        self,\n        method: str,\n        endpoint: str,\n        param: Any | None = None,\n        body: Any | None = None,\n        headers: dict | None = None,\n    ) -> Response:\n        endpoint = endpoint if endpoint.startswith(\"/\") else f\"/{endpoint}\"\n        full_url = self._base_url + endpoint\n        full_url_with_parms = full_url + param if param else full_url\n    \n        response = self._session.request(\n            method=method, url=full_url_with_parms, json=body, headers=headers\n        )\n    \n        try:\n            response_json = response.json()\n            response_json_str = json.dumps(response_json)[:200]\n        except:\n            response_json_str = \"Response not as Expected. Something is Wrong\"\n    \n        request_info = {\n            \"method\": method,\n            \"endpoint\": endpoint,\n            \"path_param\": param,\n            \"json\": json.dumps(body),\n            \"status_code\": response.status_code,\n            \"response_json\": response_json_str,\n        }\n    \n        self.requests_log.append(request_info)\n    \n>       assert (\n            200 <= response.status_code <= 299\n        ), f\"Expected {method} {endpoint} to succeed but got statusCode: {response.status_code} : body: {response.text}\"\nE       AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\nE       <head><title>503 Service Temporarily Unavailable</title></head>\r\nE       <body>\r\nE       <center><h1>503 Service Temporarily Unavailable</h1></center>\r\nE       <hr><center>nginx/1.23.2</center>\r\nE       </body>\r\nE       </html>\n\nlib/autonomous_agent_api.py:49: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"autonomous_agent_api","time":{"start":1728031537496,"stop":1728031537497,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"user_login_response","time":{"start":1728031538253,"stop":1728031538370,"duration":117},"status":"failed","statusMessage":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>\r\n\n","statusTrace":"  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1139, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/.venv/lib/python3.12/site-packages/_pytest/fixtures.py\", line 897, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/test_cases/fixtures/auth.py\", line 8, in user_login_response\n    return autonomous_agent_api.login_user(body=user_signed_data.model_dump())\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 148, in login_user\n    return self._post(\"/auth/login\", body=body)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 80, in _post\n    return self._request(\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/autonomous-agents/autonomous-agents/tests/test-api/lib/autonomous_agent_api.py\", line 49, in _request\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"autonomous_agent_api::0","time":{"start":1728031538595,"stop":1728031538596,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"User Authentication"},{"name":"suite","value":"test_auth"},{"name":"subSuite","value":"TestUserAuthentication"},{"name":"host","value":"fv-az1435-469"},{"name":"thread","value":"1958-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_auth"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":2,"skipped":0,"passed":52,"unknown":0,"total":56},"items":[{"uid":"f3116ff813228961","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/54//#testresult/f3116ff813228961","status":"failed","statusDetails":"AssertionError: Expected POST /auth/login to succeed but got statusCode: 503 : body: <html>\r\n<head><title>503 Service Temporarily Unavailable</title></head>\r\n<body>\r\n<center><h1>503 Service Temporarily Unavailable</h1></center>\r\n<hr><center>nginx/1.23.2</center>\r\n</body>\r\n</html>","time":{"start":1728022312971,"stop":1728022312971,"duration":0}},{"uid":"fdbf669070b9923d","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/53//#testresult/fdbf669070b9923d","status":"broken","statusDetails":"requests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))","time":{"start":1728020023647,"stop":1728020023699,"duration":52}},{"uid":"2b3db9719b3021d2","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/52//#testresult/2b3db9719b3021d2","status":"passed","time":{"start":1728019911976,"stop":1728019912148,"duration":172}},{"uid":"809d8d1977583213","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/51//#testresult/809d8d1977583213","status":"passed","time":{"start":1728015619065,"stop":1728015619179,"duration":114}},{"uid":"7ddf4605ca56806a","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/50//#testresult/7ddf4605ca56806a","status":"passed","time":{"start":1727944579578,"stop":1727944579691,"duration":113}},{"uid":"43503504feec00b","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/49//#testresult/43503504feec00b","status":"passed","time":{"start":1727942897171,"stop":1727942897349,"duration":178}},{"uid":"dc065d8a80b22d03","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/48//#testresult/dc065d8a80b22d03","status":"passed","time":{"start":1727841528030,"stop":1727841528148,"duration":118}},{"uid":"62d787ae20894ae8","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/47//#testresult/62d787ae20894ae8","status":"passed","time":{"start":1727432538458,"stop":1727432538571,"duration":113}},{"uid":"d3d373d127abec6f","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/46//#testresult/d3d373d127abec6f","status":"passed","time":{"start":1727269158507,"stop":1727269158686,"duration":179}},{"uid":"cb56101b2dfa2a35","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/45//#testresult/cb56101b2dfa2a35","status":"passed","time":{"start":1727260703235,"stop":1727260703352,"duration":117}},{"uid":"ae3b7f3c72063af0","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/44//#testresult/ae3b7f3c72063af0","status":"passed","time":{"start":1727257912556,"stop":1727257912672,"duration":116}},{"uid":"dafcafebdb105b75","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/43//#testresult/dafcafebdb105b75","status":"passed","time":{"start":1727257608663,"stop":1727257608780,"duration":117}},{"uid":"13e83ff9c1cb61f5","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/42//#testresult/13e83ff9c1cb61f5","status":"passed","time":{"start":1727255162914,"stop":1727255163031,"duration":117}},{"uid":"fec6a29a798b411","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/41//#testresult/fec6a29a798b411","status":"passed","time":{"start":1727252534675,"stop":1727252534787,"duration":112}},{"uid":"f9bf5b5e315831ac","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/40//#testresult/f9bf5b5e315831ac","status":"passed","time":{"start":1727252438565,"stop":1727252438743,"duration":178}},{"uid":"f387b86490822d30","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/39//#testresult/f387b86490822d30","status":"passed","time":{"start":1727248098468,"stop":1727248098645,"duration":177}},{"uid":"d817230f897fb4a5","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/38//#testresult/d817230f897fb4a5","status":"passed","time":{"start":1727240094257,"stop":1727240094427,"duration":170}},{"uid":"31c28a88bc93141","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/37//#testresult/31c28a88bc93141","status":"passed","time":{"start":1727185311454,"stop":1727185311584,"duration":130}},{"uid":"c1f8ef8b35d98c75","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/36//#testresult/c1f8ef8b35d98c75","status":"passed","time":{"start":1727177831347,"stop":1727177831465,"duration":118}},{"uid":"f3811e7c50ac32a8","reportUrl":"https://cardanoapi.github.io/autonomous-agents/test_backend_allure_report/35//#testresult/f3811e7c50ac32a8","status":"passed","time":{"start":1727169154036,"stop":1727169154154,"duration":118}}]},"tags":[]},"source":"6ff2ae4cc5ce00f2.json","parameterValues":[]}